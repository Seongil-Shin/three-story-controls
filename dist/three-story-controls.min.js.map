{"version":3,"file":"three-story-controls.min.js","sources":["../src/Damper.ts","../src/CameraRig.ts","../src/adaptors/BaseAdaptor.ts","../src/adaptors/KeyboardAdaptor.ts","../src/adaptors/PointerAdaptor.ts","../src/adaptors/ScrollAdaptor.ts","../src/adaptors/SwipeAdaptor.ts","../src/adaptors/WheelAdaptor.ts","../src/controlschemes/FreeMovementControls.ts","../src/controlschemes/ScrollControls.ts","../src/controlschemes/StoryPointsControls.ts","../src/controlschemes/PathPointsControls.ts","../src/controlschemes/ThreeDOFControls.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/camerahelper/index.ts"],"sourcesContent":["export interface DamperValues {\n  /** A value to dampen, set to its initial state  */\n  [key: string]: number | null\n}\n\nexport interface DamperProps {\n  /**  Values to be dampened */\n  values: DamperValues\n  /** Multiplier used on each update to approach the target value, should be between 0 and 1, where 1 is no damping */\n  dampingFactor: number\n  /** Amount of permitted error before a value is considered to have 'reached' its target. Defaults to 0.001 */\n  epsilon?: number\n}\n\n/**\n * Damper uses simple linear damping for a given collection of values.\n * On every call to update, the damper will approach a given set of target values.\n * @example\n * ```js\n * const damper = new Damper({\n *  values: {x: 0, y: 0},\n *  dampingFactor: 0.4\n * })\n *\n * damper.setTarget({ x: 1, y: 100 })\n * damper.update() // would generally be called in an animation loop\n * const values = damper.getCurrentValues() // values.x = 0.4; values.y = 40\n * ```\n */\n\nexport class Damper {\n  private dampingFactor: number\n  private epsilon = 0.001\n  private values: DamperValues = {}\n  private targetValues: DamperValues = {}\n  private deltaValues: DamperValues = {}\n  private hasReached: boolean\n\n  constructor(props: DamperProps) {\n    Object.assign(this.values, props.values)\n    Object.assign(this.targetValues, props.values)\n    this.deltaValues = {}\n    for (const key in this.values) {\n      this.deltaValues[key] = 0\n    }\n    this.dampingFactor = props.dampingFactor\n    if (props.epsilon) this.epsilon = props.epsilon\n    this.hasReached = true\n  }\n\n  /**\n   * Update the damper, should generally be called on every frame\n   */\n  update(): void {\n    const deltas = {}\n    let approached = true\n\n    for (const key in this.values) {\n      deltas[key] = this.targetValues[key] - this.values[key]\n      approached = approached && Math.abs(deltas[key]) < this.epsilon\n    }\n\n    if (approached) {\n      for (const key in this.values) {\n        this.deltaValues[key] = deltas[key]\n        this.values[key] = this.targetValues[key]\n      }\n      this.hasReached = true\n    } else {\n      for (const key in this.values) {\n        this.deltaValues[key] = this.dampingFactor * deltas[key]\n        this.values[key] += this.deltaValues[key]\n      }\n    }\n  }\n\n  /**\n   * Set the target values the damper needs to approach\n   * @param target DamperValues the damper needs to approach\n   */\n  setTarget(target: DamperValues): void {\n    for (const key in target) {\n      this.targetValues[key] = target[key]\n    }\n    this.hasReached = false\n  }\n\n  /**\n   * Increment/Decrement a specifc damper target value\n   * @param key The key of the value to modify\n   * @param value The amount to modify the target by\n   */\n  addToTarget(key: string, value: number): void {\n    this.targetValues[key] += value\n    this.hasReached = false\n  }\n\n  /**\n   * Reset all damper values to the fiven number\n   * @param value Number to reset all damper values to\n   */\n  resetAll(value: number): void {\n    for (const key in this.values) {\n      this.targetValues[key] = value\n      this.values[key] = value\n      this.deltaValues[key] = 0\n    }\n    this.hasReached = true\n  }\n\n  /**\n   * Reset damper values as described by the given DamperValues object\n   * @param values DamperValues object to reset the damper to\n   */\n  resetData(values: DamperValues): void {\n    for (const key in values) {\n      this.targetValues[key] = values[key]\n      this.values[key] = values[key]\n      this.deltaValues[key] = 0\n    }\n    this.hasReached = true\n  }\n\n  /**\n   * Get the current values\n   * @returns DamperValues object with the current values of the damper\n   */\n  getCurrentValues(): DamperValues {\n    return { ...this.values }\n  }\n\n  /**\n   * Get the change in values since the last update call\n   * @returns DamperValues object with the amount the values changed since the last `update()` call\n   */\n  getDeltaValues(): DamperValues {\n    return { ...this.deltaValues }\n  }\n\n  /**\n   * Whether the damper has reached its target\n   * @returns Whether the damper has reached its target (within permissible error range)\n   */\n  reachedTarget(): boolean {\n    return this.hasReached\n  }\n}\n","import {\n  Vector3,\n  Quaternion,\n  Object3D,\n  Camera,\n  PerspectiveCamera,\n  Scene,\n  AnimationMixer,\n  AnimationClip,\n  EventDispatcher,\n  Euler,\n} from 'three'\n\nimport { TweenMax } from 'gsap'\n\n/**\n * Event: Fired when CameraRig starts a transition\n * @example\n * ```javascript\n * rig.addEventListener('CameraMoveStart', handlerFunction)\n * ```\n * */\nexport interface CameraMoveStartEvent {\n  type: 'CameraMoveStart'\n}\n\n/**\n * Event: Fired on every tick of CameraRig's transition\n * @example\n * ```javascript\n * rig.addEventListener('CameraMoveUpdate', handlerFunction)\n * ```\n * */\nexport interface CameraMoveUpdateEvent {\n  type: 'CameraMoveUpdate'\n  /** Percentage of transition completed, between 0 and 1. */\n  progress: number\n}\n\n/**\n * Event: Fired when CameraRig ends a transition\n * @example\n * ```javascript\n * rig.addEventListener('CameraMoveEnd', handlerFunction)\n * ```\n * */\nexport interface CameraMoveEndEvent {\n  type: 'CameraMoveEnd'\n}\n\n/**\n * Enum of camera actions used to control a {@link three-story-controls#CameraRig}\n */\nexport enum CameraAction {\n  Pan = 'Pan',\n  Tilt = 'Tilt',\n  Roll = 'Roll',\n  Truck = 'Truck',\n  Pedestal = 'Pedestal',\n  Dolly = 'Dolly',\n  Zoom = 'Zoom',\n}\n\n/**\n * Enum of {@link three-story-controls#CameraRig} parts\n */\nexport enum RigComponent {\n  Body = 'body',\n  Head = 'head',\n  Eyes = 'eyes',\n}\n\n/**\n * Enum of axes\n */\nexport enum Axis {\n  X = 'x',\n  Y = 'y',\n  Z = 'z',\n}\n\n/**\n * Describe whether rig should translate along current rotation in each action axis\n */\nexport interface TranslateGuide {\n  [CameraAction.Pan]: boolean\n  [CameraAction.Tilt]: boolean\n  [CameraAction.Roll]: boolean\n}\n\n/**\n * Mapping of rotation action to axis\n */\nexport interface ActionAxes {\n  [CameraAction.Pan]: Axis\n  [CameraAction.Tilt]: Axis\n  [CameraAction.Roll]: Axis\n}\n\nconst AxisVector = {\n  [Axis.X]: new Vector3(1, 0, 0),\n  [Axis.Y]: new Vector3(0, 1, 0),\n  [Axis.Z]: new Vector3(0, 0, 1),\n}\n\nconst ActionMappingByUpAxis = {\n  [Axis.X]: {\n    [CameraAction.Pan]: Axis.X,\n    [CameraAction.Tilt]: Axis.Z,\n    [CameraAction.Roll]: Axis.Y,\n  },\n  [Axis.Y]: {\n    [CameraAction.Pan]: Axis.Y,\n    [CameraAction.Tilt]: Axis.X,\n    [CameraAction.Roll]: Axis.Z,\n  },\n  [Axis.Z]: {\n    [CameraAction.Pan]: Axis.Z,\n    [CameraAction.Tilt]: Axis.Y,\n    [CameraAction.Roll]: Axis.X,\n  },\n}\n\n/**\n * The CameraRig holds the camera, and can respond to {@link three-story-controls#CameraAction}s such as Pan/Tilt/Dolly etc. It can also be controlled along a given path (in the form of an `AnimationClip`), or tweened to specified points.\n *\n * @remarks\n * The rig is constructed of three objects, analagous to a body, head and eyes. The camera is nested in the eyes and is never transformed directly.\n *\n * Instead of specifying the axis to rotate/translate the camera, {@link three-story-controls#CameraAction}s are used. The rotation order of actions is always `Pan` then `Tilt` then `Roll`.\n * The mapping of these actions to axes depends on the up axis, which defaults to `Y` (but can be changed with the {@link CameraRig.setUpAxis | setUpAxis() method}):\n *\n * * `CameraAction.Pan` rotates around the `Y` axis\n *\n * * `CameraAction.Tilt` rotates around the `X` axis\n *\n * * `CameraAction.Roll` rotates around the `Z` axis\n *\n * * `CameraAction.Dolly` translates on the `Z` axis\n *\n * * `CameraAction.Truck` translates on the `X` axis\n *\n * * `CameraAction.Pedestal` translates on the `Y` axis\n *\n * Translations will be applied to the 'body' of the rig, and rotations to the 'eyes'. If an animation clip is provided, or the camera is tweened to a specific location,\n * the rotations will be applied to the 'head', thus leaving the 'eyes' free to 'look around' from this base position.\n *\n * Additionally, the default setup assumes that the rig will move forward/backward (`Dolly`) in the direction the camera is panned to.\n * This can be configured through {@link CameraRig.translateAlong | translateAlong property}.\n * It can also be overwritten by providing the component name to the {@link CameraRig.do | do() method}, see {@link https://github.com/nytimes/three-story-controls/blob/main/src/controlschemes/ThreeDOFControls.ts#L96 | ThreeDOFControls implementation} for an example.\n *\n * To move the rig along a specified path, use the {@link CameraRig.setAnimationClip | setAnimationClip() method},\n *  and set the names for the `Translation` and `Rotation` objects to match those of the clip. The clip should have a `VectorKeyframeTrack` for the outer position/translation object,\n *  and a `QuaternionKeyframeTrack` for the inner orientation/rotation object.\n *\n * See {@link three-story-controls#CameraMoveStartEvent}, {@link three-story-controls#CameraMoveUpdateEvent} and {@link three-story-controls#CameraMoveEndEvent} for emitted event signatures.\n */\nexport class CameraRig extends EventDispatcher {\n  readonly camera: Camera\n  readonly scene: Scene\n  private body: Object3D\n  private head: Object3D\n  private eyes: Object3D\n  private cameraIsInRig: boolean\n  private inTransit = false\n  private upAxis: Axis = Axis.Y\n  private actionAxes: ActionAxes = ActionMappingByUpAxis[this.upAxis]\n  private hasAnimation = false\n  private animationClip: AnimationClip\n  private mixer: AnimationMixer\n  private animationTranslationObjectName = 'Translation'\n  private animationRotationObjectName = 'Rotation'\n\n  public translateAlong: TranslateGuide = {\n    [CameraAction.Tilt]: false,\n    [CameraAction.Pan]: true,\n    [CameraAction.Roll]: false,\n  }\n\n  // Constructor\n  constructor(camera: Camera, scene: Scene) {\n    super()\n    this.camera = camera\n    this.scene = scene\n    this.body = new Object3D()\n    this.head = new Object3D()\n    this.eyes = new Object3D()\n    this.head.name = this.animationRotationObjectName\n    this.body.name = this.animationTranslationObjectName\n    this.body.rotation.order = this.getRotationOrder()\n    this.head.rotation.order = this.getRotationOrder()\n    this.eyes.rotation.order = this.getRotationOrder()\n    this.scene.add(this.body.add(this.head.add(this.eyes.add(this.camera))))\n    this.cameraIsInRig = true\n    this.unpackTransform()\n  }\n\n  /**\n   * Get the axis for a given action\n   * @param action\n   * @returns x | y | z\n   */\n  getAxisFor(action: CameraAction): string {\n    return this.actionAxes[action]\n  }\n\n  /**\n   * Get the axis' vector for a given action\n   * @param action\n   * @returns Normalized vector for the axis\n   */\n  getAxisVectorFor(action: CameraAction): Vector3 {\n    return AxisVector[this.actionAxes[action]]\n  }\n\n  /**\n   * Main method for controlling the camera\n   * @param action - Action to perform\n   * @param amount - Amount to move/rotate/etc\n   * @param rigComponent - Override the default component to perform the action on\n   */\n  do(action: CameraAction, amount: number, rigComponent?: RigComponent): void {\n    const targetComponent = this[rigComponent]\n\n    switch (action) {\n      case CameraAction.Pan:\n      case CameraAction.Tilt:\n      case CameraAction.Roll: {\n        const axis = this.getAxisVectorFor(action)\n        if (targetComponent) {\n          targetComponent.rotateOnAxis(axis, amount)\n        } else if (this.translateAlong[action]) {\n          this.body.rotateOnAxis(axis, amount)\n        } else {\n          this.eyes.rotateOnAxis(axis, amount)\n        }\n        break\n      }\n\n      case CameraAction.Truck: {\n        const axis = this.getAxisVectorFor(CameraAction.Tilt)\n        const component = targetComponent || this.body\n        component.translateOnAxis(axis, amount)\n        break\n      }\n\n      case CameraAction.Pedestal: {\n        const axis = this.getAxisVectorFor(CameraAction.Pan)\n        const component = targetComponent || this.body\n        component.translateOnAxis(axis, amount)\n        break\n      }\n\n      case CameraAction.Dolly: {\n        const axis = this.getAxisVectorFor(CameraAction.Roll)\n        const component = targetComponent || this.body\n        component.translateOnAxis(axis, amount)\n        break\n      }\n\n      case CameraAction.Zoom: {\n        if (this.camera instanceof PerspectiveCamera) {\n          this.camera.fov = amount\n          this.camera.updateProjectionMatrix()\n        }\n        break\n      }\n\n      default:\n        break\n    }\n  }\n\n  /**\n   * Get world position and orientation of the camera\n   */\n  getWorldCoordinates(): { position: Vector3; quaternion: Quaternion } {\n    const position = new Vector3()\n    this.camera.getWorldPosition(position)\n    const quaternion = new Quaternion()\n    this.camera.getWorldQuaternion(quaternion)\n    return { position, quaternion }\n  }\n\n  /**\n   * Sets world coordinates for the camera, and configures rig component transforms accordingly.\n   * @param param0\n   */\n  setWorldCoordinates({ position, quaternion }: { position: Vector3; quaternion: Quaternion }): void {\n    const currentRotation = new Euler().setFromQuaternion(quaternion, this.getRotationOrder())\n    const actions = [CameraAction.Pan, CameraAction.Tilt, CameraAction.Roll]\n    this.eyes.position.set(0, 0, 0)\n    this.eyes.rotation.set(0, 0, 0)\n    this.head.position.set(0, 0, 0)\n    this.head.rotation.set(0, 0, 0)\n    this.body.position.copy(position)\n    actions.forEach((action) => {\n      const axis = this.getAxisFor(action)\n      if (this.translateAlong[action]) {\n        this.body.rotation[axis] = currentRotation[axis]\n      } else {\n        this.eyes.rotation[axis] = currentRotation[axis]\n      }\n    })\n    this.camera.rotation.set(0, 0, 0)\n    this.camera.position.set(0, 0, 0)\n  }\n\n  /**\n   * Packs transfrom into the body and head, and 0s out transforms of the eyes. Useful for preparing the\n   * rig for control through an animation clip.\n   */\n  packTransform(): void {\n    const { position, quaternion } = this.getWorldCoordinates()\n    this.body.position.copy(position)\n    this.body.rotation.set(0, 0, 0)\n    this.head.quaternion.copy(quaternion)\n    this.head.position.set(0, 0, 0)\n    this.eyes.position.set(0, 0, 0)\n    this.eyes.rotation.set(0, 0, 0)\n  }\n\n  /**\n   * Unpacks the current camera world coordinates and distributes transforms\n   * across the rig componenets.\n   */\n  unpackTransform(): void {\n    const { position, quaternion } = this.getWorldCoordinates()\n    this.setWorldCoordinates({ position, quaternion })\n  }\n\n  /**\n   * Disassemble the camera from the rig and attach it to the scene.\n   */\n  disassemble(): void {\n    if (this.cameraIsInRig) {\n      this.scene.attach(this.camera)\n      this.cameraIsInRig = false\n    }\n  }\n\n  /**\n   * Place the camera back in the rig\n   */\n  assemble(): void {\n    if (!this.cameraIsInRig) {\n      this.eyes.attach(this.camera)\n      this.unpackTransform()\n      this.cameraIsInRig = true\n    }\n  }\n\n  /**\n   * Get the rotation order as a string compatible with what three.js uses\n   */\n  getRotationOrder(): string {\n    return Object.values(this.actionAxes).join('').toUpperCase()\n  }\n\n  /**\n   * Whether the camera is currently attached to the rig\n   */\n  isInRig(): boolean {\n    return this.cameraIsInRig\n  }\n\n  /**\n   * If the camera is in the middle of a transition\n   */\n  isMoving(): boolean {\n    return this.inTransit\n  }\n\n  /**\n   * Set the up axis for the camera\n   * @param axis - New Up axis\n   */\n  setUpAxis(axis: Axis): void {\n    this.upAxis = axis\n    this.actionAxes = ActionMappingByUpAxis[this.upAxis]\n    this.body.rotation.order = this.getRotationOrder()\n  }\n\n  /**\n   * Set an animation clip for the rig\n   * @param {AnimationClip} clip - AnimationClip containing a VectorKeyFrameTrack for position and a QuaternionKeyFrameTrack for rotation\n   * @param {string} translationObjectName - Name of translation object\n   * @param {string} rotationObjectName -  Name of rotation object\n   */\n  setAnimationClip(clip: AnimationClip, translationObjectName?: string, rotationObjectName?: string): void {\n    this.animationClip = clip\n    if (translationObjectName) this.animationTranslationObjectName = translationObjectName\n    if (rotationObjectName) this.animationRotationObjectName = rotationObjectName\n    this.hasAnimation = true\n    // hack. threejs skips last frame when seek time = clip duration\n    this.animationClip.duration += 0.01\n    this.mixer = new AnimationMixer(this.body)\n    const action = this.mixer.clipAction(this.animationClip)\n    action.clampWhenFinished = true\n    action.play()\n  }\n\n  /**\n   * Transition to a specific position and orientation in world space.\n   * Transform on eyes will be reset to 0 as a result of this.\n   * @param position\n   * @param quaternion\n   * @param duration\n   * @param ease\n   * @param useSlerp\n   */\n  flyTo(position: Vector3, quaternion: Quaternion, duration = 1, ease = 'power1', useSlerp = true): void {\n    if (!this.isMoving()) {\n      const currentCoords = this.getWorldCoordinates()\n      const currentValues = {\n        px: currentCoords.position.x,\n        py: currentCoords.position.y,\n        pz: currentCoords.position.z,\n        qx: currentCoords.quaternion.x,\n        qy: currentCoords.quaternion.y,\n        qz: currentCoords.quaternion.z,\n        qw: currentCoords.quaternion.w,\n        slerpAmt: 0,\n      }\n      const targetValues = {\n        px: position.x,\n        py: position.y,\n        pz: position.z,\n        qx: quaternion.x,\n        qy: quaternion.y,\n        qz: quaternion.z,\n        qw: quaternion.w,\n        slerpAmt: 1,\n      }\n      const onStart = (): void => {\n        this.inTransit = true\n        this.packTransform()\n        this.dispatchEvent({ type: 'CameraMoveStart' } as CameraMoveStartEvent)\n      }\n      const onUpdate = (tween: TweenMax): void => {\n        this.body.position.set(currentValues.px, currentValues.py, currentValues.pz)\n        if (useSlerp) {\n          this.head.quaternion.slerp(quaternion, currentValues.slerpAmt)\n        } else {\n          this.head.quaternion.set(currentValues.qx, currentValues.qy, currentValues.qz, currentValues.qw)\n        }\n        this.dispatchEvent({\n          type: 'CameraMoveUpdate',\n          progress: tween.progress(),\n        } as CameraMoveUpdateEvent)\n      }\n      const onComplete = (): void => {\n        this.inTransit = false\n        this.unpackTransform()\n        this.dispatchEvent({ type: 'CameraMoveEnd' } as CameraMoveEndEvent)\n      }\n      TweenMax.to(currentValues, {\n        duration,\n        ease,\n        ...targetValues,\n        onStart,\n        onUpdate: function () {\n          onUpdate(this)\n        },\n        onComplete,\n      })\n    }\n  }\n\n  /**\n   * Transition to a specific keyframe on the animation clip\n   * Transform on eyes will be reset to 0 as a result of this.\n   * @param frame - frame\n   * @param duration - duration\n   * @param ease - ease\n   */\n  flyToKeyframe(frame: number, duration = 1, ease = 'power1'): void {\n    if (this.hasAnimation && !this.isMoving()) {\n      const currentValues = {\n        time: this.mixer.time,\n      }\n      const targetValues = {\n        time: this.animationClip.tracks[0].times[frame],\n      }\n      const onStart = (): void => {\n        this.inTransit = true\n        this.dispatchEvent({ type: 'CameraMoveStart' } as CameraMoveStartEvent)\n      }\n      const onUpdate = (tween: TweenMax): void => {\n        this.mixer.setTime(currentValues.time)\n        this.dispatchEvent({\n          type: 'CameraMoveUpdate',\n          progress: tween.progress(),\n        } as CameraMoveUpdateEvent)\n      }\n      const onComplete = (): void => {\n        this.inTransit = false\n        this.dispatchEvent({ type: 'CameraMoveEnd' } as CameraMoveEndEvent)\n      }\n      TweenMax.to(currentValues, {\n        duration,\n        ease,\n        ...targetValues,\n        onStart,\n        onUpdate: function () {\n          onUpdate(this)\n        },\n        onComplete,\n      })\n    }\n  }\n\n  /**\n   * @param percentage - percentage of animation clip to move to, between 0 and 1\n   */\n  setAnimationPercentage(percentage: number): void {\n    if (this.hasAnimation) {\n      const percent = Math.max(\n        0,\n        Math.min(percentage * this.animationClip.duration, this.animationClip.duration - 0.0001),\n      )\n      this.mixer.setTime(percent)\n    }\n  }\n\n  /**\n   * @param time - timestamp of animation clip to move to\n   */\n  setAnimationTime(time: number): void {\n    if (this.hasAnimation) this.mixer.setTime(time)\n  }\n\n  /**\n   * @param frame - frame of animation clip to move to\n   */\n  setAnimationKeyframe(frame: number): void {\n    if (this.hasAnimation) this.mixer.setTime(this.animationClip.tracks[0].times[frame])\n  }\n}\n","import { EventDispatcher } from 'three'\n\nexport abstract class BaseAdaptor extends EventDispatcher {\n  constructor() {\n    super()\n  }\n  abstract connect(): void\n  abstract disconnect(): void\n  abstract update(time?: number): void\n  abstract isEnabled(): boolean\n}\n\nexport interface DiscreteEvent {\n  type: 'trigger'\n}\n\nexport interface ContinuousEvent {\n  type: 'update'\n}\n\nexport interface IntertiaCompleteEvent {\n  type: 'inertiacomplete'\n}\n","import { BaseAdaptor, DiscreteEvent, ContinuousEvent, IntertiaCompleteEvent } from './BaseAdaptor'\nimport { Damper, DamperValues } from '../Damper'\n\n/**\n * Event: Fired when a key in a `discrete` KeyboardAdaptor's mapping is released (`onKeyUp`)\n * @example\n * ```javascript\n * adaptor.on('trigger', () => { // do something })\n * ```\n * */\nexport interface KeyboardAdaptorDiscreteEvent extends DiscreteEvent {\n  /** KeyMapping key that triggered the event */\n  trigger: string\n}\n\n/**\n * Event: Fired when a key in a `continuous` KeyboardAdaptor's mapping is pressed (`onKeyDown`)\n * @example\n * ```javascript\n * adaptor.on('update', () => { // do something })\n * ```\n * */\nexport interface KeyboardAdaptorContinuousEvent extends ContinuousEvent {\n  values: DamperValues\n  deltas: DamperValues\n}\n\n/**\n * A discrete adaptor works as a trigger - only firing events on keyup,\n * whereas a continuous adaptor continuously fires events on keydown\n * */\nexport type KeyboardAdaptorType = 'discrete' | 'continuous'\n\n/**\n * Key-value pairs of semantic labels associated with an array of keys (corresponding to `KeybordEvent.keys` values)\n */\nexport interface KeyMapping {\n  /** The key is a semantic label, and the string[] is a corresponding collection of event.keys */\n  [key: string]: string[]\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#KeyboardAdaptor} constructor\n */\nexport interface KeyboardAdaptorProps {\n  /** 'discrete' or 'continuous' */\n  type: KeyboardAdaptorType\n  /**\n   * Default key mapping uses forward/backward/up/down/left/right as semanic labels, with WASD and arrow keys mapped appropriately:\n   * @example keyMapping\n   * ```javascript\n   * {\n   *   forward: ['ArrowUp', 'w', 'W'],\n   *   backward: ['ArrowDown', 's', 'S'],\n   *   left: ['ArrowLeft', 'a', 'A'],\n   *   right: ['ArrowRight', 'd', 'D'],\n   *   up: ['u', 'U'],\n   *   down: ['n', 'N'],\n   * }\n   * ```\n   * */\n  keyMapping?: KeyMapping\n  /** Only used for continuous adaptor, value between 0 and 1. Defaults to 0.5 */\n  dampingFactor?: number\n  /** Only used for continuous adaptor, the amount to increment the target value on each keydown event. Defaults to 1 */\n  incrementor?: number\n  /** Prevent event bubbling. Defaults to true */\n  preventBubbling?: boolean\n}\n\nconst defaultProps: Partial<KeyboardAdaptorProps> = {\n  keyMapping: {\n    forward: ['ArrowUp', 'w', 'W'],\n    backward: ['ArrowDown', 's', 'S'],\n    left: ['ArrowLeft', 'a', 'A'],\n    right: ['ArrowRight', 'd', 'D'],\n    up: ['u', 'U'],\n    down: ['n', 'N'],\n  },\n  dampingFactor: 0.5,\n  incrementor: 1,\n  preventBubbling: true,\n}\n\n/**\n * Parse keyboard events and emit either dampened values for continuous keypresses, or trigger events named according to a provided keymapping.\n * @remarks\n * See {@link three-story-controls#KeyboardAdaptorProps} for all properties that can be passed to the constructor.\n * See {@link three-story-controls#KeyboardAdaptorDiscreteEvent} and {@link three-story-controls#KeyboardAdaptorContinuousEvent} for emitted event signatures.\n * @example Continuous adaptor\n * ```javascript\n * const keyboardAdaptor = new KeyboardAdaptor({ type: 'continuous', dampingFactor: 0.2 })\n * keyboardAdaptor.connect()\n * keyboardAdaptor.addEventListener('update', (event) => {\n *   cube.rotation.y += event.deltas.right - event.deltas.left\n *   cube.rotation.x += event.deltas.up - event.deltas.down\n * )}\n * function animate() {\n *  keyboardAdaptor.update()\n *  window.requestAnimationFrame(animate)\n * }\n * animate()\n * ```\n */\nexport class KeyboardAdaptor extends BaseAdaptor {\n  private type: KeyboardAdaptorType\n  private damper: Damper\n  private dampingFactor: number\n  private incrementor: number\n  private keyMapping: KeyMapping\n  private connected: boolean\n  private preventBubbling: boolean\n\n  constructor(props: KeyboardAdaptorProps) {\n    super()\n    Object.assign(this, defaultProps, props)\n    const values = {}\n    for (const key in this.keyMapping) {\n      values[key] = 0\n    }\n    this.damper = new Damper({\n      values,\n      dampingFactor: this.dampingFactor,\n    })\n    this.onKeyUp = this.onKeyUp.bind(this)\n    this.onKeyDown = this.onKeyDown.bind(this)\n  }\n\n  connect(): void {\n    document.addEventListener('keyup', this.onKeyUp, true)\n    document.addEventListener('keydown', this.onKeyDown, true)\n    this.connected = true\n  }\n\n  disconnect(): void {\n    document.removeEventListener('keyup', this.onKeyUp, true)\n    document.removeEventListener('keydown', this.onKeyDown, true)\n    this.connected = false\n  }\n\n  update(): void {\n    if (this.type === 'continuous' && !this.damper.reachedTarget()) {\n      this.damper.update()\n      this.dispatchEvent({\n        type: 'update',\n        values: this.damper.getCurrentValues(),\n        deltas: this.damper.getDeltaValues(),\n      } as KeyboardAdaptorContinuousEvent)\n      if (this.damper.reachedTarget()) {\n        this.damper.resetAll(0)\n        this.dispatchEvent({\n          type: 'inertiacomplete',\n        } as IntertiaCompleteEvent)\n      }\n    }\n  }\n\n  isEnabled(): boolean {\n    return this.connected\n  }\n\n  private onKeyUp(event: KeyboardEvent): void {\n    if (this.type === 'discrete') {\n      for (const name in this.keyMapping) {\n        if (this.keyMapping[name].includes(event.key)) {\n          if (this.preventBubbling) event.preventDefault()\n          this.dispatchEvent({\n            type: 'trigger',\n            trigger: name,\n          } as KeyboardAdaptorDiscreteEvent)\n          break\n        }\n      }\n    }\n  }\n\n  private onKeyDown(event: KeyboardEvent): void {\n    if (this.type === 'continuous') {\n      for (const name in this.keyMapping) {\n        if (this.keyMapping[name].includes(event.key)) {\n          if (this.preventBubbling) event.preventDefault()\n          this.damper.addToTarget(name, this.incrementor)\n          break\n        }\n      }\n    }\n  }\n}\n","import { BaseAdaptor, ContinuousEvent, IntertiaCompleteEvent } from './BaseAdaptor'\nimport { Damper, DamperValues } from '../Damper'\n\ninterface Coordinates extends DamperValues {\n  x: number\n  y: number\n}\n\n/**\n * Event: Fired when when `PointerEvent`s are triggered\n * @example\n * ```javascript\n * adaptor.on('trigger', (e) => {\n *   console.log('x/y coordinates', e.values.x, e.values.y)\n * })\n * ```\n * */\nexport interface PointerAdaptorEvent extends ContinuousEvent {\n  /** Dampened x and y pointer coordinates */\n  values: Coordinates\n  /** Pointer coordinate change since previous update */\n  deltas: Coordinates\n  /** Number of pointers registered */\n  pointerCount: number\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#PointerAdaptor} constructor\n */\nexport interface PointerAdaptorProps {\n  /** DOM element that should listen for pointer events. Defaults to `document.body` */\n  domElement?: HTMLElement\n  /** Damping value between 0 and 1. Defaults to 0.5 */\n  dampingFactor?: number\n  /** Whether to normalize the pointer position values. Defaults to true */\n  shouldNormalize?: boolean\n  /** If values are normalized, whether they should be in -1 to 1 range. Defaults to true. */\n  normalizeAroundZero?: boolean\n  /** Debounce for registering a change in the pointer count, in ms. Defaults to 100. */\n  multipointerThreshold?: number\n}\n\nconst defaultProps: PointerAdaptorProps = {\n  domElement: document.body,\n  dampingFactor: 0.5,\n  shouldNormalize: true,\n  normalizeAroundZero: true,\n  multipointerThreshold: 100,\n}\n\n/**\n * Parse pointer events to emit dampened, normalized coordinates along with the pointer count (for detecting multi-touch or drag events)\n * @remarks\n * See {@link three-story-controls#PointerAdaptorProps} for all properties that can be passed to the constructor.\n * See {@link three-story-controls#PointerAdaptorEvent} for emitted event signatures.\n * Note: CSS property `touch-action: none` will probably be needed on listener element.\n * @example Pointer adaptor\n * ```javascript\n * const pointerAdaptor = new PointerAdaptor()\n * pointerAdaptor.connect()\n * pointerAdaptor.addEventListener('update', (event) => {\n *  switch(event.pointerCount) {\n *    case 0:\n *      cube.scale.x = event.values.x\n *      cube.scale.y = event.values.y\n *      break\n *    case 1:\n *      cube.position.x += event.deltas.x\n *      cube.position.y -= event.deltas.y\n *      break\n *    default:\n *      break\n *  }\n * })\n *\n * // in RAF loop:\n * function animate(t) {\n *  pointerAdaptor.update(t)\n * }\n * ```\n */\nexport class PointerAdaptor extends BaseAdaptor {\n  private domElement = document.body\n  private dampingFactor: number\n  private shouldNormalize = true\n  private normalizeAroundZero = true\n  private multipointerThreshold: number\n  private damper: Damper\n  private connected: boolean\n  private width: number\n  private height: number\n  private pointerCount = 0\n  private recordedPosition = false\n  private cache: Array<PointerEvent> = []\n  private lastDownTime = 0\n  private lastUpTime = 0\n\n  constructor(props: PointerAdaptorProps) {\n    super()\n    Object.assign(this, defaultProps, props)\n    this.damper = new Damper({\n      values: { x: null, y: null },\n      dampingFactor: this.dampingFactor,\n    })\n    this.setDimensions()\n    this.onPointerMove = this.onPointerMove.bind(this)\n    this.onPointerUp = this.onPointerUp.bind(this)\n    this.onPointerDown = this.onPointerDown.bind(this)\n    this.onResize = this.onResize.bind(this)\n  }\n\n  connect(): void {\n    this.domElement.addEventListener('pointermove', this.onPointerMove, { passive: true })\n    this.domElement.addEventListener('pointerdown', this.onPointerDown, { passive: true })\n    this.domElement.addEventListener('pointerleave', this.onPointerUp, { passive: true })\n    this.domElement.addEventListener('pointerup', this.onPointerUp, { passive: true })\n    window.addEventListener('resize', this.onResize)\n    this.connected = true\n  }\n\n  disconnect(): void {\n    this.domElement.removeEventListener('pointermove', this.onPointerMove)\n    this.domElement.removeEventListener('pointerdown', this.onPointerDown)\n    this.domElement.removeEventListener('pointerleave', this.onPointerUp)\n    this.domElement.removeEventListener('pointerup', this.onPointerUp)\n    this.connected = false\n  }\n\n  update(time: number): void {\n    if (\n      this.pointerCount !== this.cache.length &&\n      time - this.lastDownTime > this.multipointerThreshold &&\n      time - this.lastUpTime > this.multipointerThreshold\n    ) {\n      this.pointerCount = this.cache.length\n      if (this.pointerCount === 0) {\n        this.damper.resetAll(null)\n        this.recordedPosition = false\n      } else {\n        this.damper.resetData(this.getPointerPosition(this.cache[0]))\n        this.recordedPosition = true\n      }\n    }\n\n    if (!this.damper.reachedTarget()) {\n      this.damper.update()\n      this.dispatchEvent({\n        type: 'update',\n        values: this.shouldNormalize\n          ? this.normalize(this.damper.getCurrentValues() as Coordinates, this.normalizeAroundZero)\n          : this.damper.getCurrentValues(),\n        deltas: this.shouldNormalize\n          ? this.normalize(this.damper.getDeltaValues() as Coordinates, false)\n          : this.damper.getDeltaValues(),\n        pointerCount: this.pointerCount,\n      } as PointerAdaptorEvent)\n      if (this.damper.reachedTarget()) {\n        this.dispatchEvent({ type: 'inertiacomplete' } as IntertiaCompleteEvent)\n      }\n    }\n  }\n\n  isEnabled(): boolean {\n    return this.connected\n  }\n\n  private setDimensions(): void {\n    this.width = this.domElement.getBoundingClientRect().width\n    this.height = this.domElement.getBoundingClientRect().height\n  }\n\n  private getPointerPosition(event: PointerEvent): Coordinates {\n    // event.offsetLeft is still experimental\n    return {\n      x: Math.max(0, Math.min(this.width, event.x - this.domElement.offsetLeft)),\n      y: Math.max(0, Math.min(this.height, event.y - this.domElement.offsetTop)),\n    }\n  }\n\n  private normalize(values: Coordinates, aroundZero: boolean): Coordinates {\n    let x = values.x / this.width\n    let y = values.y / this.height\n    if (aroundZero) {\n      x = x * 2 - 1\n      y = y * 2 - 1\n    }\n    return { x, y }\n  }\n\n  private onPointerMove(event: PointerEvent): void {\n    if (this.pointerCount === this.cache.length) {\n      if (this.cache.length === 0) {\n        if (!this.recordedPosition) {\n          this.damper.resetData(this.getPointerPosition(event))\n          this.recordedPosition = true\n        } else {\n          this.damper.setTarget(this.getPointerPosition(event))\n        }\n      } else {\n        if (event.pointerId === this.cache[0].pointerId) {\n          this.damper.setTarget(this.getPointerPosition(event))\n        }\n      }\n    }\n  }\n\n  private onPointerDown(event: PointerEvent): void {\n    // only deals with left mouse button right now\n    // TODO: add some logic for optional right button events\n    if (event.button === 0) {\n      this.cache.push(event)\n      this.lastDownTime = window.performance.now()\n    }\n  }\n\n  private onPointerUp(event: PointerEvent): void {\n    if (event.button === 0 || event.type === 'pointerleave') {\n      for (let i = 0; i < this.cache.length; i++) {\n        if (this.cache[i].pointerId == event.pointerId) {\n          this.cache.splice(i, 1)\n          break\n        }\n      }\n      this.lastUpTime = window.performance.now()\n    }\n  }\n\n  private onResize(): void {\n    this.setDimensions()\n  }\n}\n","import { BaseAdaptor, ContinuousEvent, IntertiaCompleteEvent } from './BaseAdaptor'\nimport { Damper, DamperValues } from '../Damper'\n\n/**\n * Event: Fired when when the 'in view' amount of the given DOM element changes\n */\nexport interface ScrollAdaptorEvent extends ContinuousEvent {\n  values: DamperValues\n  dampenedValues: DamperValues\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#ScrollAdaptor} constructor\n */\nexport interface ScrollAdaptorProps {\n  /** Long DOM Element to observe */\n  scrollElement: HTMLElement\n  /** Offset to start registering scroll, in px or vh. Default starts when top of element is at bottom of viewport. */\n  startOffset?: string\n  /** Offset to end registering scroll, in px or vh. Default ends when bottom of element is at top of viewport. */\n  endOffset?: string\n  /** Buffer before and after element to start registering scroll. Number between 0 and 1, defaults to 0.1 */\n  buffer?: number\n  /** Value between 0 and 1. Defaults to 0.5 */\n  dampingFactor?: number\n}\n\nconst defaultProps: Partial<ScrollAdaptorProps> = {\n  startOffset: '0px',\n  endOffset: '0px',\n  buffer: 0.1,\n  dampingFactor: 0.5,\n}\n\n/**\n * Emits normalized values for the amount a given DOM element has been scrolled through.\n * @remarks\n * See {@link three-story-controls#ScrollAdaptorProps} for all properties that can be passed to the constructor.\n * See {@link three-story-controls#ScrollAdaptorEvent} for emitted event signatures.\n * @example Scroll adaptor\n * ```javascript\n * const scrollAdaptor = new ScrollAdaptor({ scrollElement: document.querySelector('.scroller'), dampingFactor: 0.1 })\n * scrollAdaptor.connect()\n * scrollAdaptor.addEventListener('update', (event) => {\n *   cube.rotation.y = event.dampenedValues.scrollPercent*Math.PI*2\n * })\n * ```\n */\nexport class ScrollAdaptor extends BaseAdaptor {\n  private scrollElement: HTMLElement\n  private damper: Damper\n  private dampingFactor: number\n  private connected: boolean\n  private values: DamperValues\n  private lastSeenScrollValue: number\n  private previousScrollValue: number\n  private startPosition: number\n  private endPosition: number\n  private distance: number\n  private bufferedStartPosition: number\n  private bufferedEndPosition: number\n  private startOffset: string\n  private endOffset: string\n  private buffer: number\n  private resizeObserver: ResizeObserver\n\n  constructor(props: ScrollAdaptorProps) {\n    super()\n    Object.assign(this, defaultProps, props)\n    this.lastSeenScrollValue = window.scrollY || -1\n    this.previousScrollValue = this.lastSeenScrollValue\n    this.values = {\n      scrollPx: null,\n      scrollPercent: null,\n    }\n    this.damper = new Damper({\n      values: this.values,\n      dampingFactor: this.dampingFactor,\n    })\n    this.calculateDimensions = this.calculateDimensions.bind(this)\n    this.onScroll = this.onScroll.bind(this)\n    this.resizeObserver = new ResizeObserver(this.calculateDimensions)\n    this.calculateDimensions()\n  }\n\n  connect(): void {\n    window.addEventListener('scroll', this.onScroll, { passive: true })\n    this.resizeObserver.observe(document.body)\n    this.connected = true\n  }\n\n  disconnect(): void {\n    window.removeEventListener('scroll', this.onScroll)\n    this.resizeObserver.unobserve(document.body)\n    this.connected = false\n  }\n\n  update(): void {\n    if (\n      this.lastSeenScrollValue !== this.previousScrollValue &&\n      this.lastSeenScrollValue >= this.bufferedStartPosition &&\n      this.lastSeenScrollValue <= this.bufferedEndPosition\n    ) {\n      const scrollPx = Math.max(0, Math.min(this.distance, this.lastSeenScrollValue - this.startPosition))\n      const scrollPercent = Math.max(0, Math.min(1, scrollPx / this.distance))\n      this.values = {\n        scrollPx,\n        scrollPercent,\n      }\n      this.damper.setTarget(this.values)\n      this.previousScrollValue = this.lastSeenScrollValue\n    }\n    if (!this.damper.reachedTarget()) {\n      this.damper.update()\n      this.dispatchEvent({\n        type: 'update',\n        values: this.values,\n        dampenedValues: this.damper.getCurrentValues(),\n      } as ScrollAdaptorEvent)\n      if (this.damper.reachedTarget()) {\n        this.dispatchEvent({ type: 'inertiacomplete' } as IntertiaCompleteEvent)\n      }\n    }\n  }\n\n  isEnabled(): boolean {\n    return this.connected\n  }\n\n  parseOffset(offset: string): number {\n    let amount = 0\n    if (offset) {\n      amount = parseInt(offset)\n      if (offset.indexOf('vh') !== -1) {\n        amount = (amount * window.innerHeight) / 100\n      } else if (this.distance && offset.indexOf('%') !== -1) {\n        amount = (amount * this.distance) / 100\n      }\n    }\n    return amount\n  }\n\n  private calculateOffset(element: HTMLElement): number {\n    if (!element) return 0\n    return this.calculateOffset(element.offsetParent as HTMLElement) + element.offsetTop\n  }\n\n  private calculateDimensions(): void {\n    const elementHeight = this.scrollElement.clientHeight\n    const offsetTop = this.calculateOffset(this.scrollElement)\n    this.startPosition = offsetTop - window.innerHeight + this.parseOffset(this.startOffset)\n    this.endPosition = offsetTop + elementHeight + this.parseOffset(this.endOffset)\n    this.distance = this.endPosition - this.startPosition\n    this.bufferedStartPosition = Math.max(0, this.startPosition * (1 - this.buffer))\n    this.bufferedEndPosition = Math.min(\n      this.endPosition * (1 + this.buffer),\n      document.body.getBoundingClientRect().height,\n    )\n  }\n\n  private onScroll(): void {\n    this.lastSeenScrollValue = window.scrollY\n  }\n}\n","import { BaseAdaptor, DiscreteEvent } from './BaseAdaptor'\n\n/**\n * Event: Fired when when swipe are registered\n * @remarks\n * The sign represents the direction of the swipe,\n * y = 1 when swiping down-to-up, and x = 1 when swiping left-to-right\n * */\nexport interface SwipeAdaptorEvent extends DiscreteEvent {\n  x: -1 | 1 | 0\n  y: -1 | 1 | 0\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#SwipeAdaptor} constructor\n */\nexport interface SwipeAdaptorProps {\n  /** DOM element to listen to events on. Defaults to document.body */\n  domElement?: HTMLElement\n  /** Threshold of pointer's deltaX to trigger events. Defaults to 60 */\n  thresholdX?: number\n  /** Threshold of pointer's deltaY to trigger events. Defaults to 60 */\n  thresholdY?: number\n}\n\nconst defaultProps: SwipeAdaptorProps = {\n  domElement: document.body,\n  thresholdX: 60,\n  thresholdY: 60,\n}\n\n/**\n * Emits events in response to swipe gestures above a given threshold.\n * @remarks\n * See {@link three-story-controls#SwipeAdaptorProps} for all properties that can be passed to the constructor.\n * See {@link three-story-controls#SwipeAdaptorEvent} for emitted event signatures.\n * Note: CSS property `touch-action: none` will probably be needed on listener element\n * @example Swipe adaptor\n * ```javascript\n * const swipeAdaptor = new SwipeAdaptor()\n * swipeAdaptor.connect()\n * swipeAdaptor.addEventListener('trigger', (event) => {\n *   cube.scale.y += event.y*0.1\n * })\n * ```\n */\nexport class SwipeAdaptor extends BaseAdaptor {\n  private domElement: HTMLElement\n  private thresholdX: number\n  private thresholdY: number\n  private startX: number\n  private startY: number\n  private connected: boolean\n\n  constructor(props: SwipeAdaptorProps = {}) {\n    super()\n    Object.assign(this, defaultProps, props)\n    this.onPointerUp = this.onPointerUp.bind(this)\n    this.onPointerDown = this.onPointerDown.bind(this)\n  }\n\n  connect(): void {\n    this.domElement.addEventListener('pointerdown', this.onPointerDown, { passive: true })\n    this.domElement.addEventListener('pointerup', this.onPointerUp, { passive: true })\n    this.connected = true\n  }\n\n  disconnect(): void {\n    this.domElement.removeEventListener('pointerdown', this.onPointerDown)\n    this.domElement.removeEventListener('pointerup', this.onPointerUp)\n    this.connected = false\n  }\n\n  update(): void {\n    // nothing to do here\n  }\n\n  isEnabled(): boolean {\n    return this.connected\n  }\n\n  private onPointerDown(event: PointerEvent): void {\n    if (event.pointerType !== 'mouse' && event.isPrimary) {\n      this.startX = event.screenX\n      this.startY = event.screenY\n    }\n  }\n\n  private onPointerUp(event: PointerEvent): void {\n    if (event.pointerType !== 'mouse' && event.isPrimary) {\n      const diffX = event.screenX - this.startX\n      const diffY = event.screenY - this.startY\n      if (Math.abs(diffX) >= this.thresholdX || Math.abs(diffY) >= this.thresholdY) {\n        this.dispatchEvent({\n          type: 'trigger',\n          x: Math.abs(diffX) >= this.thresholdX ? Math.sign(diffX) : 0,\n          y: Math.abs(diffY) >= this.thresholdY ? Math.sign(-1 * diffY) : 0,\n        } as SwipeAdaptorEvent)\n      }\n    }\n  }\n}\n","import { BaseAdaptor, DiscreteEvent, ContinuousEvent, IntertiaCompleteEvent } from './BaseAdaptor'\nimport { Damper, DamperValues } from '../Damper'\n\n/**\n * Event: Fired when when discrete `wheel` events are registered\n * @remarks\n * The sign represents the the direction of the wheel event that caused the event to trigger\n * */\nexport interface WheelAdaptorDiscreteEvent extends DiscreteEvent {\n  x: -1 | 1 | 0\n  y: -1 | 1 | 0\n}\n\n/**\n * Event: Fired on a continuous `WheelAdaptor` in response to `wheel` events\n * @remarks\n * DamperValues have `x` and `y` keys.\n * */\nexport interface WheelAdaptorContinuousEvent extends ContinuousEvent {\n  values: DamperValues\n  deltas: DamperValues\n}\n\n/**\n * A discrete adaptor works as a trigger - only firing events when wheel events pass a given threshold,\n * whereas a continuous adaptor continuously fires events on wheel\n * */\nexport type WheelAdaptorType = 'discrete' | 'continuous'\n\n/**\n * Properties that can be passed to the {@link three-story-controls#WheelAdaptor} constructor\n */\nexport interface WheelAdaptorProps {\n  /** 'discrete' or 'continuous' */\n  type: WheelAdaptorType\n  /** DOM element to listen to events on. Defaults to window */\n  domElement?: HTMLElement\n  /** Only used for continuous adaptor, value between 0 and 1. Defaults to 0.5 */\n  dampingFactor?: number\n  /** Only used for discrete adaptor, threshold of wheel.deltaX to trigger events. Defaults to 15 */\n  thresholdX?: number\n  /** Only used for discrete adaptor, threshold of wheel.deltaY to trigger events. Defaults to 15 */\n  thresholdY?: number\n  /** Only used for discrete adaptor, rest duration between firing trigger events. Defaults to 700 */\n  debounceDuration?: number\n}\n\nconst defaultProps: Partial<WheelAdaptorProps> = {\n  dampingFactor: 0.5,\n  thresholdX: 15,\n  thresholdY: 15,\n  debounceDuration: 700,\n}\n\n/**\n * Parse mouse wheel events and emit either dampened values, or trigger events for swipes that cross a given threshold.\n * @remarks\n * See {@link three-story-controls#WheelAdaptorProps} for all properties that can be passed to the constructor.\n * See {@link three-story-controls#WheelAdaptorDiscreteEvent} and {@link three-story-controls#WheelAdaptorContinuousEvent} for emitted event signatures.\n * @example Discrete adaptor\n * ```javascript\n * const wheelAdaptor = new WheelAdaptor({ type: 'discrete' })\n * wheelAdaptor.connect()\n * wheelAdaptor.addEventListener('trigger', (event) => {\n *   cube.scale.y += event.y*0.1\n * })\n * ```\n */\nexport class WheelAdaptor extends BaseAdaptor {\n  private type: WheelAdaptorType\n  private domElement: HTMLElement\n  private dampingFactor: number\n  private damper: Damper\n  private thresholdX: number\n  private thresholdY: number\n  private debounceDuration: number\n  private lastThresholdTrigger = 0\n  private connected: boolean\n\n  constructor(props: WheelAdaptorProps) {\n    super()\n    Object.assign(this, defaultProps, props)\n    this.damper = new Damper({\n      values: { x: 0, y: 0 },\n      dampingFactor: this.dampingFactor,\n    })\n    this.onWheel = this.onWheel.bind(this)\n  }\n\n  connect(): void {\n    const element = this.domElement || window\n    element.addEventListener('wheel', this.onWheel, { passive: true })\n    this.connected = true\n  }\n\n  disconnect(): void {\n    const element = this.domElement || window\n    element.removeEventListener('wheel', this.onWheel)\n    this.connected = false\n  }\n\n  update(): void {\n    if (this.type === 'continuous' && !this.damper.reachedTarget()) {\n      this.damper.update()\n      this.dispatchEvent({\n        type: 'update',\n        values: this.damper.getCurrentValues(),\n        deltas: this.damper.getDeltaValues(),\n      } as WheelAdaptorContinuousEvent)\n      if (this.damper.reachedTarget()) {\n        this.damper.resetAll(0)\n        this.dispatchEvent({\n          type: 'inertiacomplete',\n        } as IntertiaCompleteEvent)\n      }\n    }\n  }\n\n  isEnabled(): boolean {\n    return this.connected\n  }\n\n  private onWheel(event: WheelEvent): void {\n    if (this.type === 'continuous') {\n      this.damper.addToTarget('x', event.deltaX)\n      this.damper.addToTarget('y', event.deltaY)\n    } else if (this.type === 'discrete') {\n      if (Math.abs(event.deltaX) >= this.thresholdX || Math.abs(event.deltaY) >= this.thresholdY) {\n        const now = window.performance.now()\n        if (now - this.lastThresholdTrigger > this.debounceDuration) {\n          this.lastThresholdTrigger = now\n          this.dispatchEvent({\n            type: 'trigger',\n            x: Math.abs(event.deltaX) >= this.thresholdX ? Math.sign(event.deltaX) : 0,\n            y: Math.abs(event.deltaY) >= this.thresholdY ? Math.sign(event.deltaY) : 0,\n          } as WheelAdaptorDiscreteEvent)\n        }\n      }\n    }\n  }\n}\n","import { BaseControls } from './BaseControls'\nimport { CameraRig, CameraAction } from '../CameraRig'\nimport { KeyboardAdaptor } from '../adaptors/KeyboardAdaptor'\nimport { PointerAdaptor } from '../adaptors/PointerAdaptor'\nimport { WheelAdaptor } from '../adaptors/WheelAdaptor'\n\n/**\n * Properties that can be passed to the {@link three-story-controls#FreeMovementControls} constructor\n */\nexport interface FreeMovementControlsProps {\n  domElement?: HTMLElement\n  /** Damping factor between 0 and 1. Defaults to 0.3 */\n  pointerDampFactor?: number\n  /** Mutiplier for two-pointer translation. Defaults to 4 */\n  pointerScaleFactor?: number\n  /** Damping factor between 0 and 1. Defaults to 0.5 */\n  keyboardDampFactor?: number\n  /** Mutiplier for keyboard translation. Defaults to 0.5 */\n  keyboardScaleFactor?: number\n  /** Damping factor between 0 and 1. Defaults to 0.25 */\n  wheelDampFactor?: number\n  /** Mutiplier for wheel translation. Defaults to 0.05 */\n  wheelScaleFactor?: number\n  /** Mutiplier for panning. Defaults to Math.PI / 4 */\n  panDegreeFactor?: number\n  /** Mutiplier for tilting. Defaults to Math.PI / 10 */\n  tiltDegreeFactor?: number\n}\n\nconst defaultProps: FreeMovementControlsProps = {\n  domElement: document.body,\n  pointerDampFactor: 0.3,\n  pointerScaleFactor: 4,\n  keyboardDampFactor: 0.5,\n  keyboardScaleFactor: 0.5,\n  wheelDampFactor: 0.25,\n  wheelScaleFactor: 0.05,\n  panDegreeFactor: Math.PI / 4,\n  tiltDegreeFactor: Math.PI / 10,\n}\n\n/**\n * Control scheme to move the camera with arrow/WASD keys and mouse wheel; and rotate the camera with click-and-drag events.\n * @remarks\n *  Note: CSS property `touch-action: none` will probably be needed on listener element.\n *\n * See {@link three-story-controls#FreeMovementControlsProps} for all properties that can be passed to the constructor.\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/freemove | DEMO }\n *\n * @example\n * ```js\n * const scene = new Scene()\n * const camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n * const cameraRig = new CameraRig(camera, scene)\n * const controls = new FreeMovementControls(cameraRig)\n *\n * controls.enable()\n *\n * // render loop\n * function animate(t) {\n *  controls.update(t)\n * }\n * ```\n *\n */\nexport class FreeMovementControls implements BaseControls {\n  readonly cameraRig: CameraRig\n  private keyboardAdaptor: KeyboardAdaptor\n  private wheelAdaptor: WheelAdaptor\n  private pointerAdaptor: PointerAdaptor\n  private wheelScaleFactor: number\n  private pointerScaleFactor: number\n  private panDegreeFactor: number\n  private tiltDegreeFactor: number\n  private enabled = false\n\n  /** {@inheritDoc three-story-controls#FreeMovementControlsProps#} */\n  constructor(cameraRig: CameraRig, props: FreeMovementControlsProps = {}) {\n    this.cameraRig = cameraRig\n\n    this.wheelScaleFactor = props.wheelScaleFactor || defaultProps.wheelScaleFactor\n    this.pointerScaleFactor = props.pointerScaleFactor || defaultProps.pointerScaleFactor\n    this.panDegreeFactor = props.panDegreeFactor || defaultProps.panDegreeFactor\n    this.tiltDegreeFactor = props.tiltDegreeFactor || defaultProps.tiltDegreeFactor\n\n    this.keyboardAdaptor = new KeyboardAdaptor({\n      type: 'continuous',\n      dampingFactor: props.keyboardDampFactor || defaultProps.keyboardDampFactor,\n      incrementor: props.keyboardScaleFactor || defaultProps.keyboardScaleFactor,\n    })\n\n    this.wheelAdaptor = new WheelAdaptor({\n      type: 'continuous',\n      dampingFactor: props.wheelDampFactor || defaultProps.wheelDampFactor,\n      domElement: props.domElement || defaultProps.domElement,\n    })\n\n    this.pointerAdaptor = new PointerAdaptor({\n      domElement: props.domElement || defaultProps.domElement,\n      dampingFactor: props.pointerDampFactor || defaultProps.pointerDampFactor,\n    })\n\n    this.onWheel = this.onWheel.bind(this)\n    this.onKey = this.onKey.bind(this)\n    this.onPointer = this.onPointer.bind(this)\n  }\n\n  isEnabled(): boolean {\n    return this.enabled\n  }\n\n  enable(): void {\n    this.wheelAdaptor.connect()\n    this.keyboardAdaptor.connect()\n    this.pointerAdaptor.connect()\n    this.wheelAdaptor.addEventListener('update', this.onWheel)\n    this.keyboardAdaptor.addEventListener('update', this.onKey)\n    this.pointerAdaptor.addEventListener('update', this.onPointer)\n    this.enabled = true\n  }\n\n  disable(): void {\n    this.wheelAdaptor.disconnect()\n    this.keyboardAdaptor.disconnect()\n    this.pointerAdaptor.disconnect()\n    this.wheelAdaptor.removeEventListener('update', this.onWheel)\n    this.keyboardAdaptor.removeEventListener('update', this.onKey)\n    this.pointerAdaptor.removeEventListener('update', this.onPointer)\n    this.enabled = false\n  }\n\n  private onWheel(event): void {\n    this.cameraRig.do(CameraAction.Dolly, event.deltas.y * this.wheelScaleFactor)\n    this.cameraRig.do(CameraAction.Truck, event.deltas.x * this.wheelScaleFactor)\n  }\n\n  private onKey(event): void {\n    this.cameraRig.do(CameraAction.Dolly, event.values.backward - event.values.forward)\n    this.cameraRig.do(CameraAction.Truck, event.values.right - event.values.left)\n    this.cameraRig.do(CameraAction.Pedestal, event.values.up - event.values.down)\n  }\n\n  private onPointer(event): void {\n    switch (event.pointerCount) {\n      case 1:\n        this.cameraRig.do(CameraAction.Pan, event.deltas.x * this.panDegreeFactor)\n        this.cameraRig.do(CameraAction.Tilt, event.deltas.y * this.tiltDegreeFactor)\n        break\n      case 2:\n        this.cameraRig.do(CameraAction.Dolly, -event.deltas.y * this.pointerScaleFactor)\n        this.cameraRig.do(CameraAction.Truck, -event.deltas.x * this.pointerScaleFactor)\n        break\n      default:\n        break\n    }\n  }\n\n  update(time: number): void {\n    if (this.enabled) {\n      this.keyboardAdaptor.update()\n      this.wheelAdaptor.update()\n      this.pointerAdaptor.update(time)\n    }\n  }\n}\n","import { BaseControls } from './BaseControls'\nimport { CameraRig } from '../CameraRig'\nimport { ScrollAdaptor } from '../adaptors/ScrollAdaptor'\n\n/**\n * ScrollActions provide a way to add custom callback hooks for specific parts of the scroll area\n */\nexport interface ScrollAction {\n  /** When to start the action, in %, px or vh. */\n  start: string\n  /** When to end the action, in %, px or vh. */\n  end: string\n  /** Callback with 0-1 progress when element is between start and end conditions.  */\n  callback: (progress: number) => void\n  /** @internal */\n  startPx: number\n  /** @internal */\n  endPx: number\n  /** @internal */\n  bufferedStartPx: number\n  /** @internal */\n  bufferedEndPx: number\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#ScrollControls} constructor\n */\nexport interface ScrollControlsProps {\n  /** Long DOM Element to observe */\n  scrollElement: HTMLElement\n  /** Offset to start registering scroll, in px or vh. Default starts when top of element is at bottom of viewport. */\n  startOffset?: string\n  /** Offset to end registering scroll, in px or vh. Default ends when bottom of element is at top of viewport. */\n  endOffset?: string\n  /** Value between 0 and 1. Defaults to 1 */\n  dampingFactor?: number\n  /** Buffer before and after element to start registering scroll. Number (percentage) between 0 and 1, defaults to 0.1 */\n  buffer?: number\n  /** When in the scroll to start the camera animation, can be specified in px, % or vh */\n  cameraStart?: string\n  /** When in the scroll to end the camera animation, can be specified in px, % or vh */\n  cameraEnd?: string\n  /** Array of ScrollActions for custom scroll hooks  */\n  scrollActions: ScrollAction[]\n}\n\nconst defaultProps: Partial<ScrollControlsProps> = {\n  startOffset: '0px',\n  endOffset: '0px',\n  dampingFactor: 1,\n  buffer: 0.1,\n  cameraStart: '0%',\n  cameraEnd: '100%',\n  scrollActions: [],\n}\n\nconst mapRange = (number, inMin, inMax, outMin, outMax): number => {\n  return Math.max(outMin, Math.min(outMax, (number - inMin) * ((outMax - outMin) / (inMax - inMin)) + outMin))\n}\n\n/**\n * Control scheme to scrub through the CameraRig's `AnimationClip` based on the scroll of a DOM Element\n * @remarks\n * See {@link three-story-controls#ScrollControlsProps} for all properties that can be passed to the constructor.\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/scroll-controls/ | DEMO }\n *\n * @example\n * ```js\n * const scene = new Scene()\n * const gltfLoader = new GLTFLoader()\n * const camera = new PerspectiveCamera()\n * const cameraRig = new CameraRig(camera, scene)\n * const controls = new ScrollControls(cameraRig, {\n *  scrollElement: document.querySelector('.scroller'),\n *  cameraStart: '12%',\n *  cameraEnd: '90%',\n *  scrollActions: [\n *    { start: '0%' , end: '10%', callback: e => fadeInElement(e) },\n *    { start: '85%' , end: '100%', callback: e => fadeOutElement(e) }\n *  ]\n * })\n *\n * function fadeInElement(progress) { // entry fade transition }\n * function fadeOutElement(progress) { // exit fade transition }\n *\n * gltfLoader.load(cameraPath, (gltf) => {\n *  cameraRig.setAnimationClip(gltf.animations[0])\n *  cameraRig.setAnimationTime(0)\n *  controls.enable()\n * })\n *\n * // render loop\n * function animate() {\n *  controls.update()\n * }\n * ```\n */\nexport class ScrollControls implements BaseControls {\n  readonly cameraRig: CameraRig\n  private scrollAdaptor: ScrollAdaptor\n  private enabled = false\n  private cameraStart: string\n  private cameraEnd: string\n  private cameraStartPx: number\n  private cameraEndPx: number\n  private cameraBufferedStartPx: number\n  private cameraBufferedEndPx: number\n  private scrollActions: ScrollAction[]\n  private buffer: number\n\n  constructor(cameraRig: CameraRig, props: ScrollControlsProps) {\n    this.cameraRig = cameraRig\n    this.cameraRig.setAnimationTime(0)\n\n    this.scrollAdaptor = new ScrollAdaptor({\n      scrollElement: props.scrollElement,\n      dampingFactor: props.dampingFactor || defaultProps.dampingFactor,\n      startOffset: props.startOffset || defaultProps.startOffset,\n      endOffset: props.endOffset || defaultProps.endOffset,\n      buffer: props.buffer || defaultProps.buffer,\n    })\n\n    this.cameraStart = props.cameraStart || defaultProps.cameraStart\n    this.cameraEnd = props.cameraEnd || defaultProps.cameraEnd\n    this.scrollActions = props.scrollActions || defaultProps.scrollActions\n    this.buffer = props.buffer || defaultProps.buffer\n    this.calculateStops()\n    this.onScroll = this.onScroll.bind(this)\n  }\n\n  isEnabled(): boolean {\n    return this.enabled\n  }\n\n  enable(): void {\n    this.scrollAdaptor.connect()\n    this.scrollAdaptor.addEventListener('update', this.onScroll)\n    this.enabled = true\n  }\n\n  disable(): void {\n    this.scrollAdaptor.disconnect()\n    this.scrollAdaptor.removeEventListener('update', this.onScroll)\n    this.enabled = false\n  }\n\n  update(): void {\n    if (this.enabled) {\n      this.scrollAdaptor.update()\n    }\n  }\n\n  private calculateStops(): void {\n    this.cameraStartPx = this.scrollAdaptor.parseOffset(this.cameraStart)\n    this.cameraEndPx = this.scrollAdaptor.parseOffset(this.cameraEnd)\n    this.cameraBufferedStartPx = this.cameraStartPx * (1 - this.buffer)\n    this.cameraBufferedEndPx = this.cameraEndPx * (1 + this.buffer)\n    this.scrollActions.forEach((action) => {\n      action.startPx = this.scrollAdaptor.parseOffset(action.start)\n      action.endPx = this.scrollAdaptor.parseOffset(action.end)\n      action.bufferedStartPx = action.startPx * (1 - this.buffer)\n      action.bufferedEndPx = action.endPx * (1 + this.buffer)\n    })\n  }\n\n  private onScroll(event): void {\n    const progress = event.dampenedValues.scrollPx\n    if (progress >= this.cameraBufferedStartPx && progress <= this.cameraBufferedEndPx) {\n      this.cameraRig.setAnimationPercentage(mapRange(progress, this.cameraStartPx, this.cameraEndPx, 0, 1))\n    }\n    this.scrollActions.forEach((action) => {\n      if (progress >= action.bufferedStartPx && progress <= action.bufferedEndPx) {\n        action.callback(mapRange(progress, action.startPx, action.endPx, 0, 1))\n      }\n    })\n  }\n}\n","import { EventDispatcher, Vector3, Quaternion } from 'three'\nimport { BaseControls, UpdatePOIsEvent, ExitPOIsEvent } from './BaseControls'\nimport { KeyboardAdaptor } from '../adaptors/KeyboardAdaptor'\nimport { CameraRig } from '../CameraRig'\n\nexport interface StoryPointMarker {\n  /** Camera position */\n  position: Vector3\n  /** Camera quaternion */\n  quaternion: Quaternion\n  /** Transition duration, defaults to 1 */\n  duration?: number\n  /** Transition easing, defaults to power1 */\n  ease?: string\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#StoryPointsControls} constructor\n */\nexport interface StoryPointsControlsProps {\n  /** Whether to cycle to the first/last POI after reaching the end/start. When false, controls with emit 'ExitStoryPoints' events. Defaults to false. */\n  cycle?: boolean\n  /** Use keyboard arrow keys as navigation, defaults to true */\n  useKeyboard?: boolean\n}\n\nconst defaultProps: StoryPointsControlsProps = {\n  cycle: false,\n  useKeyboard: true,\n}\n\n/**\n * Control scheme to transition the camera between given points in world space.\n * @remarks\n * See {@link three-story-controls#StoryPointsControlsProps} for all properties that can be passed to the constructor.\n *\n * See {@link three-story-controls#StoryPointMarker} for POI properties.\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/story-points/ | DEMO }\n *\n * @example\n * ```js\n *\n * const pois = [\n *  { position: new Vector3(...), quaternion: new Quaternion(...) },\n *  { position: new Vector3(...), quaternion: new Quaternion(...) },\n * ]\n * const scene = new Scene()\n * const camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n * const cameraRig = new CameraRig(camera, scene)\n * const controls = new StoryPointsControls(cameraRig, pois)\n *\n * controls.enable()\n * controls.goToPOI(0)\n *\n * // Assuming DOM elements with classes 'nextBtn' and 'prevBtn' have been created\n * document.querySelector('.nextBtn').on('click', () => controls.nextPOI() )\n * document.querySelector('.prevBtn').on('click', () => controls.prevPOI() )\n * ```\n */\nexport class StoryPointsControls extends EventDispatcher implements BaseControls {\n  readonly cameraRig: CameraRig\n  private keyboardAdaptor: KeyboardAdaptor\n  private pois: StoryPointMarker[]\n  private currentIndex: number | null = null\n  private upcomingIndex: number | null = null\n  private enabled = false\n  private cycle: boolean\n  private useKeyboard: boolean\n\n  constructor(cameraRig: CameraRig, pois: StoryPointMarker[] = [], props: StoryPointsControlsProps = {}) {\n    super()\n    this.cameraRig = cameraRig\n    this.pois = pois\n    Object.assign(this, defaultProps, props)\n    if (this.useKeyboard) {\n      this.keyboardAdaptor = new KeyboardAdaptor({\n        type: 'discrete',\n        keyMapping: {\n          next: ['ArrowDown', 'ArrowRight'],\n          prev: ['ArrowUp', 'ArrowLeft'],\n        },\n      })\n      this.onKey = this.onKey.bind(this)\n    }\n    this.onCameraStart = this.onCameraStart.bind(this)\n    this.onCameraUpdate = this.onCameraUpdate.bind(this)\n    this.onCameraEnd = this.onCameraEnd.bind(this)\n  }\n\n  getCurrentIndex(): number {\n    return this.currentIndex\n  }\n\n  nextPOI(): void {\n    const next = this.currentIndex + 1\n    if (next >= this.pois.length && !this.cycle) {\n      this.dispatchEvent({\n        type: 'ExitPOIs',\n        exitFrom: 'end',\n      } as ExitPOIsEvent)\n    } else {\n      this.goToPOI(next % this.pois.length)\n    }\n  }\n\n  prevPOI(): void {\n    const prev = this.currentIndex - 1\n    if (prev < 0 && !this.cycle) {\n      this.dispatchEvent({\n        type: 'ExitPOIs',\n        exitFrom: 'start',\n      } as ExitPOIsEvent)\n    } else {\n      this.goToPOI((prev + this.pois.length) % this.pois.length)\n    }\n  }\n\n  goToPOI(index: number): void {\n    this.upcomingIndex = index\n    const poi = this.pois[this.upcomingIndex]\n    this.cameraRig.flyTo(poi.position, poi.quaternion, poi.duration, poi.ease)\n  }\n\n  enable(): void {\n    if (this.useKeyboard) {\n      this.keyboardAdaptor.connect()\n      this.keyboardAdaptor.addEventListener('trigger', this.onKey)\n    }\n    this.cameraRig.addEventListener('CameraMoveStart', this.onCameraStart)\n    this.cameraRig.addEventListener('CameraMoveUpdate', this.onCameraUpdate)\n    this.cameraRig.addEventListener('CameraMoveEnd', this.onCameraEnd)\n    this.enabled = true\n  }\n\n  disable(): void {\n    if (this.useKeyboard) {\n      this.keyboardAdaptor.disconnect()\n      this.keyboardAdaptor.removeEventListener('trigger', this.onKey)\n    }\n    this.cameraRig.removeEventListener('CameraMoveStart', this.onCameraStart)\n    this.cameraRig.removeEventListener('CameraMoveUpdate', this.onCameraUpdate)\n    this.cameraRig.removeEventListener('CameraMoveEnd', this.onCameraEnd)\n    this.enabled = false\n  }\n\n  update(): void {\n    // nothing to do here\n  }\n\n  isEnabled(): boolean {\n    return this.enabled\n  }\n\n  private updatePois(progress: number): void {\n    this.dispatchEvent({\n      type: 'update',\n      currentIndex: this.currentIndex,\n      upcomingIndex: this.upcomingIndex,\n      progress,\n    } as UpdatePOIsEvent)\n  }\n\n  private onCameraStart(): void {\n    this.updatePois(0)\n  }\n\n  private onCameraUpdate(event): void {\n    this.updatePois(event.progress)\n  }\n\n  private onCameraEnd(): void {\n    this.currentIndex = this.upcomingIndex\n    this.upcomingIndex = null\n  }\n\n  private onKey(event): void {\n    if (event.trigger === 'next') {\n      this.nextPOI()\n    } else if (event.trigger === 'prev') {\n      this.prevPOI()\n    }\n  }\n}\n","import { EventDispatcher } from 'three'\nimport { BaseControls, UpdatePOIsEvent, ExitPOIsEvent } from './BaseControls'\nimport { CameraRig } from '../CameraRig'\nimport { KeyboardAdaptor } from '../adaptors/KeyboardAdaptor'\nimport { WheelAdaptor } from '../adaptors/WheelAdaptor'\nimport { SwipeAdaptor } from '../adaptors/SwipeAdaptor'\n\nexport interface PathPointMarker {\n  frame: number\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#PathPointsControls} constructor\n */\nexport interface PathPointsControlsProps {\n  /** Threshold of wheel delta that triggers a transition. Defaults to 15 */\n  wheelThreshold?: number\n  /** Threshold of swipe distance that triggers a transition. Defaults to 60 */\n  swipeThreshold?: number\n  /** Transition duration, defaults to 1 */\n  duration?: number\n  /** Transition easing, defaults to power1 */\n  ease?: string\n  /** Use keyboard arrow keys as navigation, defaults to true */\n  useKeyboard?: boolean\n}\n\nconst defaultProps: PathPointsControlsProps = {\n  wheelThreshold: 15,\n  swipeThreshold: 60,\n  duration: 1,\n  ease: 'power1',\n  useKeyboard: true,\n}\n\n/**\n * Control scheme to transition the camera between specific points (frames) along a path specified through an `AnimationClip`.\n * @remarks\n * Note: CSS property `touch-action: none` will probably be needed on listener element.\n *\n * See {@link three-story-controls#PathPointsControlsProps} for all properties that can be passed to the constructor.\n *\n * See {@link three-story-controls#PathPointMarker} for POI properties.\n *\n * See {@link three-story-controls#UpdatePOIsEvent} and {@link three-story-controls#ExitPOIsEvent} for emitted event signatures.\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/path-points/ | DEMO }\n * @example\n * ```js\n *\n * const pois = [ { frame: 0 }, { frame: 54 } ....]\n * const scene = new Scene()\n * const gltfLoader = new GLTFLoader()\n * let camera, cameraRig, controls\n *\n * gltfLoader.load(cameraPath, (gltf) => {\n *  camera = gltf.cameras[0]\n *  cameraRig = new CameraRig(camera, scene)\n *  cameraRig.setAnimationClip(gltf.animations[0])\n *  cameraRig.setAnimationTime(0)\n *  controls = new PathPointsControls(cameraRig, pois)\n *  controls.enable()\n *  controls.addEventListener('ExitPOIs', (e) => {\n *    // e.exitFrom will be either 'start' or 'end'\n *  })\n *  controls.addEventListener('update', (e) => {\n *    // e.currentIndex will be the index of the starting poi\n *    // e.upcomingIndex will be the index of the upcoming poi\n *    // e.progress will be a number 0-1 indicating progress of the transition\n *  })\n * })\n * ```\n */\nexport class PathPointsControls extends EventDispatcher implements BaseControls {\n  readonly cameraRig: CameraRig\n  private wheelAdaptor: WheelAdaptor\n  private swipeAdaptor: SwipeAdaptor\n  private keyboardAdaptor: KeyboardAdaptor\n  private pois: PathPointMarker[]\n  private currentIndex = 0\n  private upcomingIndex: number | null = null\n  private enabled = false\n  private duration: number\n  private ease: string\n  private wheelThreshold: number\n  private swipeThreshold: number\n  private useKeyboard: boolean\n\n  constructor(cameraRig: CameraRig, pois: PathPointMarker[] = [], props: PathPointsControlsProps = {}) {\n    super()\n    this.cameraRig = cameraRig\n    this.pois = pois\n    Object.assign(this, defaultProps, props)\n    this.wheelAdaptor = new WheelAdaptor({ type: 'discrete', thresholdY: this.wheelThreshold })\n    this.swipeAdaptor = new SwipeAdaptor({ thresholdY: this.swipeThreshold })\n    if (this.useKeyboard) {\n      this.keyboardAdaptor = new KeyboardAdaptor({\n        type: 'discrete',\n        keyMapping: {\n          next: ['ArrowDown', 'ArrowRight'],\n          prev: ['ArrowUp', 'ArrowLeft'],\n        },\n      })\n      this.onKey = this.onKey.bind(this)\n    }\n    this.onCameraStart = this.onCameraStart.bind(this)\n    this.onCameraUpdate = this.onCameraUpdate.bind(this)\n    this.onCameraEnd = this.onCameraEnd.bind(this)\n    this.onTrigger = this.onTrigger.bind(this)\n  }\n\n  getCurrentIndex(): number {\n    return this.currentIndex\n  }\n\n  enable(): void {\n    if (this.useKeyboard) {\n      this.keyboardAdaptor.addEventListener('trigger', this.onKey)\n      this.keyboardAdaptor.connect()\n    }\n    this.wheelAdaptor.addEventListener('trigger', this.onTrigger)\n    this.swipeAdaptor.addEventListener('trigger', this.onTrigger)\n    this.cameraRig.addEventListener('CameraMoveStart', this.onCameraStart)\n    this.cameraRig.addEventListener('CameraMoveUpdate', this.onCameraUpdate)\n    this.cameraRig.addEventListener('CameraMoveEnd', this.onCameraEnd)\n    this.wheelAdaptor.connect()\n    this.swipeAdaptor.connect()\n    this.enabled = true\n  }\n\n  disable(): void {\n    if (this.useKeyboard) {\n      this.keyboardAdaptor.removeEventListener('trigger', this.onKey)\n      this.keyboardAdaptor.disconnect()\n    }\n    this.wheelAdaptor.removeEventListener('trigger', this.onTrigger)\n    this.swipeAdaptor.removeEventListener('trigger', this.onTrigger)\n    this.cameraRig.removeEventListener('CameraMoveStart', this.onCameraStart)\n    this.cameraRig.removeEventListener('CameraMoveUpdate', this.onCameraUpdate)\n    this.cameraRig.removeEventListener('CameraMoveEnd', this.onCameraEnd)\n    this.wheelAdaptor.disconnect()\n    this.swipeAdaptor.disconnect()\n    this.enabled = false\n  }\n\n  update(): void {\n    // nothing to do here\n  }\n\n  isEnabled(): boolean {\n    return this.enabled\n  }\n\n  private onKey(event): void {\n    switch (event.trigger) {\n      case 'prev':\n        this.onTrigger({ y: -1 })\n        break\n      case 'next':\n        this.onTrigger({ y: 1 })\n        break\n      default:\n        break\n    }\n  }\n\n  private onTrigger(event): void {\n    const index = this.currentIndex + event.y\n    if (index >= this.pois.length) {\n      this.dispatchEvent({\n        type: 'ExitPOIs',\n        exitFrom: 'end',\n      } as ExitPOIsEvent)\n    } else if (index < 0) {\n      this.dispatchEvent({\n        type: 'ExitPOIs',\n        exitFrom: 'start',\n      } as ExitPOIsEvent)\n    } else {\n      this.upcomingIndex = index\n      this.cameraRig.flyToKeyframe(this.pois[this.upcomingIndex].frame, this.duration, this.ease)\n    }\n  }\n\n  private updatePois(progress: number): void {\n    this.dispatchEvent({\n      type: 'update',\n      currentIndex: this.currentIndex,\n      upcomingIndex: this.upcomingIndex,\n      progress,\n    } as UpdatePOIsEvent)\n  }\n\n  private onCameraStart(): void {\n    this.updatePois(0)\n  }\n\n  private onCameraUpdate(event): void {\n    this.updatePois(event.progress)\n  }\n\n  private onCameraEnd(): void {\n    this.currentIndex = this.upcomingIndex\n    this.upcomingIndex = null\n  }\n}\n","import { BaseControls } from './BaseControls'\nimport { CameraRig, CameraAction, RigComponent } from '../CameraRig'\nimport { PointerAdaptor } from '../adaptors/PointerAdaptor'\n\n/**\n * Properties that can be passed to the {@link three-story-controls#ThreeDOFControls} constructor\n */\n//TODO: add option for relative or absolute control (in terms of screen space)\nexport interface ThreeDOFControlsProps {\n  /** DOM element that should listen for pointer events. Defaults to `document.body` */\n  domElement?: HTMLElement\n  /** Mutiplier for panning. Defaults to Math.PI / 20 */\n  panFactor?: number\n  /** Mutiplier for tilting. Defaults to Math.PI / 20 */\n  tiltFactor?: number\n  /** Mutiplier for truck translation. Defaults to 1 */\n  truckFactor?: number\n  /** Mutiplier for pedestal translation. Defaults to 1 */\n  pedestalFactor?: number\n  /** Damping factor between 0 and 1. Defaults to 0.7 */\n  dampingFactor?: number\n}\n\nconst defaultProps: ThreeDOFControlsProps = {\n  domElement: document.body,\n  panFactor: Math.PI / 20,\n  tiltFactor: Math.PI / 20,\n  truckFactor: 1,\n  pedestalFactor: 1,\n  dampingFactor: 0.7,\n}\n\n/**\n * Control scheme for slight rotation and translation movement in response to mouse movements (designed to be used in conjunction with other control schemes)\n * @remarks\n * Note: CSS property `touch-action: none` will probably be needed on listener element\n *\n * See {@link three-story-controls#ThreeDOFControlsProps} for all properties that can be passed to the constructor.\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/story-points/ | DEMO w/ story points }\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/scroll-controls/ | DEMO w/ scroll controls}\n *\n * @example\n * ```js\n * const scene = new Scene()\n * const camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n * const cameraRig = new CameraRig(camera, scene)\n * const controls = new ThreeDOFControls(cameraRig)\n *\n * controls.enable()\n *\n * // render loop\n * function animate(t) {\n *  controls.update(t)\n * }\n * ```\n */\nexport class ThreeDOFControls implements BaseControls {\n  readonly cameraRig: CameraRig\n  private pointerAdaptor: PointerAdaptor\n  private enabled = false\n  private panFactor: number\n  private tiltFactor: number\n  private truckFactor: number\n  private pedestalFactor: number\n\n  constructor(cameraRig: CameraRig, props: ThreeDOFControlsProps = {}) {\n    this.cameraRig = cameraRig\n    Object.assign(this, defaultProps, props)\n    this.pointerAdaptor = new PointerAdaptor({\n      domElement: props.domElement || defaultProps.domElement,\n      dampingFactor: props.dampingFactor || defaultProps.dampingFactor,\n    })\n    this.onPointerMove = this.onPointerMove.bind(this)\n  }\n\n  isEnabled(): boolean {\n    return this.enabled\n  }\n\n  enable(): void {\n    this.pointerAdaptor.connect()\n    this.pointerAdaptor.addEventListener('update', this.onPointerMove)\n    this.enabled = true\n  }\n\n  disable(): void {\n    this.pointerAdaptor.disconnect()\n    this.pointerAdaptor.removeEventListener('update', this.onPointerMove)\n    this.enabled = false\n  }\n\n  update(time: number): void {\n    if (this.enabled) {\n      this.pointerAdaptor.update(time)\n    }\n  }\n\n  private onPointerMove(event): void {\n    if (event.pointerCount === 0) {\n      this.cameraRig.do(CameraAction.Pan, -event.deltas.x * this.panFactor, RigComponent.Eyes)\n      this.cameraRig.do(CameraAction.Tilt, -event.deltas.y * this.tiltFactor, RigComponent.Eyes)\n      this.cameraRig.do(CameraAction.Truck, event.deltas.x * this.truckFactor, RigComponent.Eyes)\n      this.cameraRig.do(CameraAction.Pedestal, event.deltas.y * this.pedestalFactor, RigComponent.Eyes)\n    }\n  }\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { Quaternion, Vector3, AnimationClip, VectorKeyframeTrack, QuaternionKeyframeTrack } from 'three'\nimport { gsap } from 'gsap'\nimport { CameraRig } from '../CameraRig'\nimport { FreeMovementControls } from '../controlschemes/FreeMovementControls'\nimport './index.css'\n\nconst easeFunctions = ['none', 'power1', 'power2', 'power3', 'power4', 'sine', 'expo', 'circ']\n\ninterface POI {\n  position: Vector3\n  quaternion: Quaternion\n  duration: number\n  ease: string\n  image: string\n}\n\nconst DOMClass = {\n  visit: 'visit',\n  remove: 'remove',\n  duration: 'duration',\n  ease: 'ease',\n  moveUp: 'move-up',\n  moveDown: 'move-down',\n}\n\n/**\n * A helper tool for creating camera animation paths and/or choosing camera look-at positions for points of interest in a scene\n *\n * @remarks\n * A helper tool for creating camera animation paths and/or choosing camera look-at positions for points of interest in a scene.\n *\n * The `CameraHelper` can be set up with any scene along with {@link three-story-controls#FreeMovementControls | FreeMovementControls}.\n *\n * It renders as an overlay with functionality to add/remove/reorders points of interest, and create an animation path between them.\n *  Each saved camera position is displayed with an image on the `CameraHelper` panel.\n *\n * The data can be exported as a JSON file that can then be used with different control schemes.\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/camera-helper | DEMO }\n *\n * @example\n * Here's an example of initializing the CameraHelper\n * ```js\n * const scene = new Scene()\n * const camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n * const cameraRig = new CameraRig(camera, scene)\n * const controls = new FreeMovementControls(cameraRig)\n *\n * controls.enable()\n *\n * const cameraHelper = new CameraHelper(rig, controls, renderer.domElement)\n *\n * // Render loop\n * // To allow for capturing an image of the canvas,\n * // it's important to update the CameraHelper after the scene is rendered,\n * // but before requesting the animation frame\n * function render(t) {\n *   controls.update(t)\n *   renderer.render(scene, camera)\n *   cameraHelper.update(t)\n *   window.requestAnimationFrame(render)\n * }\n *\n * render()\n * ```\n *\n *\n *\n * The following examples demonstrate using the exported data. Note: Depending on your setup, you may need to change the .json extension to .js and prepend the text with `export default` such that you can import it as javascript\n *\n * @example\n * Here's an example using the exported JSON data with ScrollControls.\n * ```javascript\n * import * as cameraData from 'camera-control.json'\n * const scene = new Scene()\n * const gltfLoader = new GLTFLoader()\n * const camera = new PerspectiveCamera()\n * const cameraRig = new CameraRig(camera, scene)\n *\n * // Parse the JSON animation clip\n * cameraRig.setAnimationClip(AnimationClip.parse(cameraData.animationClip))\n * cameraRig.setAnimationTime(0)\n *\n * const controls = new ScrollControls(cameraRig, {\n *  scrollElement: document.querySelector('.scroller'),\n * })\n *\n * controls.enable()\n *\n * function render(t) {\n *   window.requestAnimationFrame(render)\n *   if (rig.hasAnimation) {\n *     controls.update(t)\n *   }\n *   renderer.render(scene, camera)\n * }\n * ```\n *\n * @example\n * Here's an example using the exported data with Story Point controls\n * ```javascript\n * import * as cameraData from 'camera-control.json'\n * const scene = new Scene()\n * const gltfLoader = new GLTFLoader()\n * const camera = new PerspectiveCamera()\n * const cameraRig = new CameraRig(camera, scene)\n *\n * // Format the exported data to create three.js Vector and Quaternions\n * const pois = cameraData.pois.map((poi, i) => {\n *   return {\n *     position: new Vector3(...poi.position),\n *     quaternion: new Quaternion(...poi.quaternion),\n *     duration: poi.duration,\n *     ease: poi.ease,\n *   }\n * })\n *\n * const controls = new StoryPointsControls(rig, pois)\n * controls.enable()\n *\n * function render(t) {\n *   window.requestAnimationFrame(render)\n *   controls.update(t)\n *   renderer.render(scene, camera)\n * }\n * ```\n */\nexport class CameraHelper {\n  readonly rig: CameraRig\n  readonly controls: FreeMovementControls\n  readonly canvas: HTMLCanvasElement\n  private pois: POI[]\n  private currentIndex: number | null\n  private drawer: HTMLElement\n  private domList: HTMLElement\n  private collapseBtn: HTMLElement\n  private doCapture: boolean\n  private animationClip: AnimationClip\n  private isPlaying: boolean\n  private playStartTime: number\n  private useSlerp = true\n\n  constructor(rig: CameraRig, controls: FreeMovementControls, canvas: HTMLCanvasElement, canvasParent?: HTMLElement) {\n    this.rig = rig\n    this.controls = controls\n    this.canvas = canvas\n    this.pois = []\n    this.currentIndex = null\n    this.doCapture = false\n    this.isPlaying = false\n    this.initUI(canvasParent)\n  }\n\n  private capture(): void {\n    this.doCapture = true\n  }\n\n  update(time: number): void {\n    if (this.doCapture) {\n      const image = this.canvas.toDataURL()\n      this.addPoi(image)\n      this.doCapture = false\n    }\n    if (this.isPlaying) {\n      if (!this.playStartTime) {\n        this.playStartTime = time\n        this.controls.disable()\n        this.rig.packTransform()\n      }\n      const t = (time - this.playStartTime) / 1000\n      this.rig.setAnimationTime(t)\n      if (t > this.animationClip.duration) {\n        this.isPlaying = false\n        this.playStartTime = null\n        this.controls.enable()\n        this.rig.unpackTransform()\n      }\n    }\n  }\n\n  private addPoi(image: string): void {\n    this.pois.push({\n      ...this.rig.getWorldCoordinates(),\n      duration: 1,\n      ease: 'power1',\n      image,\n    })\n    this.currentIndex = this.pois.length - 1\n    this.createClip()\n    this.render()\n  }\n\n  private updatePoi(index: number, props: Partial<POI>): void {\n    this.pois[index] = {\n      ...this.pois[index],\n      ...props,\n    }\n  }\n\n  private movePoi(index: number, direction: number): void {\n    if (index + direction >= 0 && index + direction < this.pois.length) {\n      const temp = this.pois[index]\n      this.pois[index] = this.pois[index + direction]\n      this.pois[index + direction] = temp\n      this.render()\n    }\n  }\n\n  private removePoi(index: number): void {\n    this.pois.splice(index, 1)\n    this.render()\n  }\n\n  private goToPoi(index: number): void {\n    const poi = this.pois[index]\n    this.rig.flyTo(poi.position, poi.quaternion, poi.duration, poi.ease, this.useSlerp)\n  }\n\n  private createClip(): void {\n    const times = []\n    const positionValues = []\n    const quaternionValues = []\n    const tmpPosition = new Vector3()\n    const tmpQuaternion = new Quaternion()\n    const framesPerPoi = 10\n\n    let tweenStartTime = 0\n\n    for (let i = 0; i < this.pois.length - 1; i++) {\n      const p1 = this.pois[i]\n      const p2 = this.pois[i + 1]\n\n      const values = {\n        px: p1.position.x,\n        py: p1.position.y,\n        pz: p1.position.z,\n        qx: p1.quaternion.x,\n        qy: p1.quaternion.y,\n        qz: p1.quaternion.z,\n        qw: p1.quaternion.w,\n        slerpAmount: 0,\n      }\n\n      const target = {\n        px: p2.position.x,\n        py: p2.position.y,\n        pz: p2.position.z,\n        qx: p2.quaternion.x,\n        qy: p2.quaternion.y,\n        qz: p2.quaternion.z,\n        qw: p2.quaternion.w,\n        slerpAmount: 1,\n        duration: p2.duration,\n        ease: p2.ease,\n      }\n\n      const tween = gsap.to(values, target)\n\n      for (let j = 0; j < framesPerPoi; j++) {\n        const lerpAmount = p2.duration * (j / framesPerPoi)\n        times.push(tweenStartTime + lerpAmount)\n        tween.seek(lerpAmount)\n        if (this.useSlerp) {\n          tmpQuaternion.slerpQuaternions(p1.quaternion, p2.quaternion, values.slerpAmount)\n        } else {\n          tmpQuaternion.set(values.qx, values.qy, values.qz, values.qw)\n        }\n        tmpPosition.set(values.px, values.py, values.pz)\n        tmpQuaternion.toArray(quaternionValues, quaternionValues.length)\n        tmpPosition.toArray(positionValues, positionValues.length)\n      }\n      tweenStartTime += p2.duration\n    }\n    // add last point\n    const last = this.pois[this.pois.length - 1]\n    last.quaternion.toArray(quaternionValues, quaternionValues.length)\n    last.position.toArray(positionValues, positionValues.length)\n    times.push(tweenStartTime)\n    this.animationClip = new AnimationClip(null, tweenStartTime, [\n      new VectorKeyframeTrack('Translation.position', times, positionValues),\n      new QuaternionKeyframeTrack('Rotation.quaternion', times, quaternionValues),\n    ])\n    this.rig.setAnimationClip(this.animationClip)\n  }\n\n  private scrubClip(amount: number): void {\n    this.rig.setAnimationPercentage(amount)\n  }\n\n  private playClip(): void {\n    this.isPlaying = true\n  }\n\n  private export(): void {\n    const jsondata = {} as any\n    jsondata.pois = this.pois.map((poi) => {\n      const position = [poi.position.x, poi.position.y, poi.position.z]\n      const quaternion = [poi.quaternion.x, poi.quaternion.y, poi.quaternion.z, poi.quaternion.w]\n      return {\n        position,\n        quaternion,\n        duration: poi.duration,\n        ease: poi.ease,\n      }\n    })\n    if (this.animationClip) {\n      jsondata.animationClip = AnimationClip.toJSON(this.animationClip)\n    }\n    const data = 'text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(jsondata))\n    const a = document.createElement('a')\n    a.href = 'data:' + data\n    a.download = 'camera-control.json'\n    document.body.appendChild(a)\n    a.click()\n    a.remove()\n  }\n\n  private exportImages(): void {\n    const link = document.createElement('a')\n    document.body.appendChild(link)\n    this.pois.forEach((poi, index) => {\n      link.href = poi.image\n      link.download = `camera-poi-${index}.png`\n      link.click()\n    })\n    link.remove()\n  }\n\n  // ui\n\n  private initUI(canvasParent?: HTMLElement): void {\n    this.drawer = document.createElement('div')\n    this.drawer.classList.add('tb-ch')\n\n    const btnAdd = document.createElement('button')\n    btnAdd.classList.add('btn-round', 'add')\n    btnAdd.innerText = '+'\n    btnAdd.onclick = this.capture.bind(this)\n\n    this.collapseBtn = document.createElement('button')\n    this.collapseBtn.classList.add('btn-round', 'collapse')\n    this.collapseBtn.innerText = '<'\n    this.collapseBtn.onclick = this.collapse.bind(this)\n\n    const controlWrapper = document.createElement('div')\n    controlWrapper.classList.add('controls')\n\n    const btnExport = document.createElement('button')\n    btnExport.classList.add('btn-text', 'export')\n    btnExport.innerText = 'export JSON'\n    btnExport.onclick = this.export.bind(this)\n\n    const bntExportImages = document.createElement('button')\n    bntExportImages.classList.add('btn-text', 'export-images')\n    bntExportImages.innerHTML = 'export images'\n    bntExportImages.onclick = this.exportImages.bind(this)\n\n    const btnPlay = document.createElement('button')\n    btnPlay.classList.add('btn-text', 'play')\n    btnPlay.innerText = 'play'\n    btnPlay.onclick = this.playClip.bind(this)\n\n    const sliderTime: HTMLInputElement = document.createElement('input')\n    sliderTime.type = 'range'\n    sliderTime.min = '0'\n    sliderTime.max = '1000'\n    sliderTime.step = '0.1'\n    sliderTime.value = '0'\n    const updateTime = this.scrubClip.bind(this)\n    sliderTime.onmousedown = () => this.rig.packTransform()\n    sliderTime.onmouseup = () => this.rig.unpackTransform()\n    sliderTime.oninput = (e) => updateTime(parseInt((<HTMLInputElement>e.target).value) / 1000)\n\n    this.domList = document.createElement('div')\n    this.domList.classList.add('pois')\n    this.domList.onclick = this.handleEvents.bind(this)\n    this.domList.onchange = this.handleEvents.bind(this)\n\n    controlWrapper.append(btnPlay, sliderTime, bntExportImages, btnExport)\n    this.drawer.append(btnAdd, this.collapseBtn, this.domList, controlWrapper)\n\n    const parent = canvasParent || document.body\n    parent.append(this.drawer)\n  }\n\n  private handleEvents(event): void {\n    const index = event.target.dataset.index\n    if (index) {\n      if (event.target.classList.contains(DOMClass.visit)) {\n        this.goToPoi(parseInt(index))\n      } else if (event.target.classList.contains(DOMClass.remove)) {\n        this.removePoi(parseInt(index))\n      } else if (event.target.classList.contains(DOMClass.duration)) {\n        this.updatePoi(parseInt(index), { duration: parseFloat((<HTMLInputElement>event.target).value) })\n      } else if (event.target.classList.contains(DOMClass.ease)) {\n        this.updatePoi(parseInt(index), { ease: (<HTMLSelectElement>event.target).value })\n      } else if (event.target.classList.contains(DOMClass.moveUp)) {\n        this.movePoi(parseInt(index), -1)\n      } else if (event.target.classList.contains(DOMClass.moveDown)) {\n        this.movePoi(parseInt(index), 1)\n      }\n      this.createClip()\n    }\n  }\n\n  private collapse(): void {\n    if (this.drawer.classList.contains('collapsed')) {\n      this.drawer.classList.remove('collapsed')\n      this.collapseBtn.innerText = '<'\n    } else {\n      this.drawer.classList.add('collapsed')\n      this.collapseBtn.innerText = '>'\n    }\n  }\n\n  private render(): void {\n    this.domList.innerHTML = ''\n    this.pois.forEach((poi, index) => {\n      const div = document.createElement('div')\n      div.classList.add('poi')\n\n      const textHeading = document.createElement('h2')\n      textHeading.innerText = `${index + 1}.`\n\n      const wrapper = document.createElement('div')\n      wrapper.classList.add('wrapper')\n      const controls = document.createElement('div')\n      controls.classList.add('poi-controls')\n      const params = document.createElement('div')\n      params.classList.add('poi-params')\n\n      const image = new Image()\n      image.src = poi.image\n\n      const labelDuration = document.createElement('label')\n      labelDuration.innerText = 'Duration'\n      const inputDuration = document.createElement('input')\n      inputDuration.classList.add(DOMClass.duration)\n      inputDuration.dataset.index = `${index}`\n      inputDuration.type = 'number'\n      inputDuration.value = String(poi.duration)\n\n      const labelEase = document.createElement('label')\n      labelEase.innerText = 'Easing'\n      const selectEase = document.createElement('select')\n      selectEase.classList.add(DOMClass.ease)\n      selectEase.dataset.index = `${index}`\n      const options = easeFunctions.map((x) => {\n        const op = document.createElement('option')\n        op.innerText = x\n        op.value = x\n        op.selected = x === poi.ease\n        return op\n      })\n      selectEase.append(...options)\n\n      const btnRemove = document.createElement('button')\n      btnRemove.classList.add(DOMClass.remove)\n      btnRemove.title = 'Remove'\n      btnRemove.dataset.index = `${index}`\n      btnRemove.innerText = 'x'\n\n      const btnVisit = document.createElement('button')\n      btnVisit.classList.add(DOMClass.visit)\n      btnVisit.title = 'Visit'\n      btnVisit.dataset.index = `${index}`\n      btnVisit.innerHTML = '&rarr;'\n\n      const btnMoveUp = document.createElement('button')\n      btnMoveUp.classList.add(DOMClass.moveUp)\n      btnMoveUp.title = 'Move up'\n      btnMoveUp.dataset.index = `${index}`\n      btnMoveUp.innerHTML = '&uarr;'\n\n      const btnMoveDown = document.createElement('button')\n      btnMoveDown.classList.add(DOMClass.moveDown)\n      btnMoveDown.title = 'Move down'\n      btnMoveDown.dataset.index = `${index}`\n      btnMoveDown.innerHTML = '&darr;'\n\n      controls.append(btnRemove, btnVisit, btnMoveUp, btnMoveDown)\n      params.append(labelDuration, inputDuration, labelEase, selectEase)\n      wrapper.append(image, controls)\n      div.append(textHeading, wrapper, params)\n      this.domList.appendChild(div)\n    })\n  }\n}\n"],"names":["Damper","[object Object]","props","this","Object","assign","values","targetValues","deltaValues","key","dampingFactor","epsilon","hasReached","deltas","approached","Math","abs","target","value","CameraAction","RigComponent","Axis","AxisVector","X","Vector3","Y","Z","ActionMappingByUpAxis","Pan","Tilt","Roll","CameraRig","EventDispatcher","camera","scene","super","upAxis","body","Object3D","head","eyes","name","animationRotationObjectName","animationTranslationObjectName","rotation","order","getRotationOrder","add","cameraIsInRig","unpackTransform","action","actionAxes","amount","rigComponent","targetComponent","axis","getAxisVectorFor","rotateOnAxis","translateAlong","Truck","translateOnAxis","Pedestal","Dolly","Zoom","PerspectiveCamera","fov","updateProjectionMatrix","position","getWorldPosition","quaternion","Quaternion","getWorldQuaternion","currentRotation","Euler","setFromQuaternion","actions","set","copy","forEach","getAxisFor","getWorldCoordinates","setWorldCoordinates","attach","join","toUpperCase","inTransit","clip","translationObjectName","rotationObjectName","animationClip","hasAnimation","duration","mixer","AnimationMixer","clipAction","clampWhenFinished","play","ease","useSlerp","isMoving","currentCoords","currentValues","px","x","py","y","pz","z","qx","qy","qz","qw","w","slerpAmt","onStart","packTransform","dispatchEvent","type","onUpdate","tween","slerp","progress","onComplete","TweenMax","to","frame","time","tracks","times","setTime","percentage","percent","max","min","BaseAdaptor","defaultProps","keyMapping","forward","backward","left","right","up","down","incrementor","preventBubbling","KeyboardAdaptor","damper","onKeyUp","bind","onKeyDown","document","addEventListener","connected","removeEventListener","reachedTarget","update","getCurrentValues","getDeltaValues","resetAll","event","includes","preventDefault","trigger","addToTarget","domElement","shouldNormalize","normalizeAroundZero","multipointerThreshold","PointerAdaptor","setDimensions","onPointerMove","onPointerUp","onPointerDown","onResize","passive","window","pointerCount","cache","length","lastDownTime","lastUpTime","recordedPosition","resetData","getPointerPosition","normalize","width","getBoundingClientRect","height","offsetLeft","offsetTop","aroundZero","setTarget","pointerId","button","push","performance","now","i","splice","startOffset","endOffset","buffer","ScrollAdaptor","lastSeenScrollValue","scrollY","previousScrollValue","scrollPx","scrollPercent","calculateDimensions","onScroll","resizeObserver","ResizeObserver","observe","unobserve","bufferedStartPosition","bufferedEndPosition","distance","startPosition","dampenedValues","offset","parseInt","indexOf","innerHeight","element","calculateOffset","offsetParent","elementHeight","scrollElement","clientHeight","parseOffset","endPosition","thresholdX","thresholdY","SwipeAdaptor","pointerType","isPrimary","startX","screenX","startY","screenY","diffX","diffY","sign","debounceDuration","WheelAdaptor","onWheel","deltaX","deltaY","lastThresholdTrigger","pointerDampFactor","pointerScaleFactor","keyboardDampFactor","keyboardScaleFactor","wheelDampFactor","wheelScaleFactor","panDegreeFactor","PI","tiltDegreeFactor","cameraStart","cameraEnd","scrollActions","mapRange","number","inMin","inMax","outMin","outMax","cycle","useKeyboard","StoryPointsControls","cameraRig","pois","keyboardAdaptor","next","prev","onKey","onCameraStart","onCameraUpdate","onCameraEnd","currentIndex","exitFrom","goToPOI","index","upcomingIndex","poi","flyTo","connect","enabled","disconnect","updatePois","nextPOI","prevPOI","wheelThreshold","swipeThreshold","PathPointsControls","wheelAdaptor","swipeAdaptor","onTrigger","flyToKeyframe","panFactor","tiltFactor","truckFactor","pedestalFactor","css","ref","insertAt","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","easeFunctions","DOMClass","rig","controls","canvas","canvasParent","doCapture","isPlaying","initUI","image","toDataURL","addPoi","playStartTime","disable","t","setAnimationTime","enable","createClip","render","direction","temp","positionValues","quaternionValues","tmpPosition","tmpQuaternion","tweenStartTime","p1","p2","slerpAmount","gsap","j","lerpAmount","seek","slerpQuaternions","toArray","last","AnimationClip","VectorKeyframeTrack","QuaternionKeyframeTrack","setAnimationClip","setAnimationPercentage","jsondata","map","toJSON","data","encodeURIComponent","JSON","stringify","a","href","download","click","remove","link","drawer","classList","btnAdd","innerText","onclick","capture","collapseBtn","collapse","controlWrapper","btnExport","export","bntExportImages","innerHTML","exportImages","btnPlay","playClip","sliderTime","step","updateTime","scrubClip","onmousedown","onmouseup","oninput","e","domList","handleEvents","onchange","append","dataset","contains","goToPoi","removePoi","updatePoi","parseFloat","movePoi","div","textHeading","wrapper","params","Image","src","labelDuration","inputDuration","String","labelEase","selectEase","options","op","selected","btnRemove","title","btnVisit","btnMoveUp","btnMoveDown","pointerAdaptor","onPointer","do","scrollAdaptor","calculateStops","cameraStartPx","cameraEndPx","cameraBufferedStartPx","cameraBufferedEndPx","startPx","start","endPx","end","bufferedStartPx","bufferedEndPx","callback","Eyes"],"mappings":"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"}